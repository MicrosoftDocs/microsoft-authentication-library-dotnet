<Type Name="SignedHttpRequestHandler" FullName="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler">
  <TypeSignature Language="C#" Value="public class SignedHttpRequestHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignedHttpRequestHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SignedHttpRequestHandler" />
  <TypeSignature Language="F#" Value="type SignedHttpRequestHandler = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Protocols.SignedHttpRequest</AssemblyName>
    <AssemblyVersion>6.27.0.0</AssemblyVersion>
    <AssemblyVersion>6.28.1.0</AssemblyVersion>
    <AssemblyVersion>6.29.0.0</AssemblyVersion>
    <AssemblyVersion>6.30.0.0</AssemblyVersion>
    <AssemblyVersion>6.30.1.0</AssemblyVersion>
    <AssemblyVersion>6.31.0.0</AssemblyVersion>
    <AssemblyVersion>6.32.0.0</AssemblyVersion>
    <AssemblyVersion>6.32.1.0</AssemblyVersion>
    <AssemblyVersion>6.32.2.0</AssemblyVersion>
    <AssemblyVersion>6.32.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.2.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.2.0.0</AssemblyVersion>
    <AssemblyVersion>7.3.1.0</AssemblyVersion>
    <AssemblyVersion>7.4.0.0</AssemblyVersion>
    <AssemblyVersion>7.4.1.0</AssemblyVersion>
    <AssemblyVersion>7.5.0.0</AssemblyVersion>
    <AssemblyVersion>7.5.1.0</AssemblyVersion>
    <AssemblyVersion>7.5.2.0</AssemblyVersion>
    <AssemblyVersion>7.6.0.0</AssemblyVersion>
    <AssemblyVersion>7.6.2.0</AssemblyVersion>
    <AssemblyVersion>7.6.3.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.1.0</AssemblyVersion>
    <AssemblyVersion>8.0.2.0</AssemblyVersion>
    <AssemblyVersion>8.1.0.0</AssemblyVersion>
    <AssemblyVersion>8.1.1.0</AssemblyVersion>
    <AssemblyVersion>8.1.2.0</AssemblyVersion>
    <AssemblyVersion>8.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A handler designed for creating and validating signed http requests. 
            </summary>
    <remarks>The handler implementation is based on 'A Method for Signing HTTP Requests for OAuth' specification.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedHttpRequestHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.SignedHttpRequest</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHttpRequestPayload">
      <MemberSignature Language="C#" Value="protected internal virtual string CreateHttpRequestPayload (Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor signedHttpRequestDescriptor, Microsoft.IdentityModel.Tokens.CallContext callContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string CreateHttpRequestPayload(class Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor signedHttpRequestDescriptor, class Microsoft.IdentityModel.Tokens.CallContext callContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler.CreateHttpRequestPayload(Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor,Microsoft.IdentityModel.Tokens.CallContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateHttpRequestPayload (signedHttpRequestDescriptor As SignedHttpRequestDescriptor, callContext As CallContext) As String" />
      <MemberSignature Language="F#" Value="abstract member CreateHttpRequestPayload : Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor * Microsoft.IdentityModel.Tokens.CallContext -&gt; string&#xA;override this.CreateHttpRequestPayload : Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor * Microsoft.IdentityModel.Tokens.CallContext -&gt; string" Usage="signedHttpRequestHandler.CreateHttpRequestPayload (signedHttpRequestDescriptor, callContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.SignedHttpRequest</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedHttpRequestDescriptor" Type="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor" />
        <Parameter Name="callContext" Type="Microsoft.IdentityModel.Tokens.CallContext" />
      </Parameters>
      <Docs>
        <param name="signedHttpRequestDescriptor">A structure that wraps parameters needed for SignedHttpRequest creation.</param>
        <param name="callContext">An opaque context used to store work and logs when working with authentication artifacts.</param>
        <summary>
            Creates a JSON representation of a HttpRequest payload.
            </summary>
        <returns>A JSON representation of an HttpRequest payload.</returns>
        <remarks>
            Users can utilize <see cref="P:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.AdditionalPayloadClaims" /> to create additional claim(s) and add them to the signed http request.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignedHttpRequest">
      <MemberSignature Language="C#" Value="public string CreateSignedHttpRequest (Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor signedHttpRequestDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string CreateSignedHttpRequest(class Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor signedHttpRequestDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler.CreateSignedHttpRequest(Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignedHttpRequest (signedHttpRequestDescriptor As SignedHttpRequestDescriptor) As String" />
      <MemberSignature Language="F#" Value="member this.CreateSignedHttpRequest : Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor -&gt; string" Usage="signedHttpRequestHandler.CreateSignedHttpRequest signedHttpRequestDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.SignedHttpRequest</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedHttpRequestDescriptor" Type="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor" />
      </Parameters>
      <Docs>
        <param name="signedHttpRequestDescriptor">A structure that wraps parameters needed for SignedHttpRequest creation.</param>
        <summary>
            Creates a signed http request using the <paramref name="signedHttpRequestDescriptor" />.
            </summary>
        <returns>A signed http request as a JWS in Compact Serialization Format.</returns>
        <remarks>Default <see cref="T:Microsoft.IdentityModel.Tokens.CallContext" /> will be created.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignedHttpRequest">
      <MemberSignature Language="C#" Value="public string CreateSignedHttpRequest (Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor signedHttpRequestDescriptor, Microsoft.IdentityModel.Tokens.CallContext callContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string CreateSignedHttpRequest(class Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor signedHttpRequestDescriptor, class Microsoft.IdentityModel.Tokens.CallContext callContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler.CreateSignedHttpRequest(Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor,Microsoft.IdentityModel.Tokens.CallContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignedHttpRequest (signedHttpRequestDescriptor As SignedHttpRequestDescriptor, callContext As CallContext) As String" />
      <MemberSignature Language="F#" Value="member this.CreateSignedHttpRequest : Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor * Microsoft.IdentityModel.Tokens.CallContext -&gt; string" Usage="signedHttpRequestHandler.CreateSignedHttpRequest (signedHttpRequestDescriptor, callContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.SignedHttpRequest</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedHttpRequestDescriptor" Type="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor" />
        <Parameter Name="callContext" Type="Microsoft.IdentityModel.Tokens.CallContext" />
      </Parameters>
      <Docs>
        <param name="signedHttpRequestDescriptor">A structure that wraps parameters needed for SignedHttpRequest creation.</param>
        <param name="callContext">An opaque context used to store work and logs when working with authentication artifacts.</param>
        <summary>
            Creates a signed http request using the <paramref name="signedHttpRequestDescriptor" />.
            </summary>
        <returns>A signed http request as a JWS in Compact Serialization Format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSignedHttpRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationResult&gt; ValidateSignedHttpRequestAsync (Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext signedHttpRequestValidationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationResult&gt; ValidateSignedHttpRequestAsync(class Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext signedHttpRequestValidationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler.ValidateSignedHttpRequestAsync(Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateSignedHttpRequestAsync (signedHttpRequestValidationContext As SignedHttpRequestValidationContext, cancellationToken As CancellationToken) As Task(Of SignedHttpRequestValidationResult)" />
      <MemberSignature Language="F#" Value="member this.ValidateSignedHttpRequestAsync : Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationResult&gt;" Usage="signedHttpRequestHandler.ValidateSignedHttpRequestAsync (signedHttpRequestValidationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.SignedHttpRequest</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedHttpRequestValidationContext" Type="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="signedHttpRequestValidationContext">A structure that wraps parameters needed for SignedHttpRequest validation.</param>
        <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        <summary>
            Validates a signed http request using the <paramref name="signedHttpRequestValidationContext" />.
            </summary>
        <returns>A <see cref="T:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationResult" />. 
            <see cref="P:Microsoft.IdentityModel.Tokens.TokenValidationResult.IsValid" /> will be <c>true</c> if the signed http request was successfully validated, <c>false</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSignedHttpRequestPayloadAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task&lt;Microsoft.IdentityModel.Tokens.SecurityToken&gt; ValidateSignedHttpRequestPayloadAsync (Microsoft.IdentityModel.Tokens.SecurityToken signedHttpRequest, Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext signedHttpRequestValidationContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.IdentityModel.Tokens.SecurityToken&gt; ValidateSignedHttpRequestPayloadAsync(class Microsoft.IdentityModel.Tokens.SecurityToken signedHttpRequest, class Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext signedHttpRequestValidationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestHandler.ValidateSignedHttpRequestPayloadAsync(Microsoft.IdentityModel.Tokens.SecurityToken,Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ValidateSignedHttpRequestPayloadAsync (signedHttpRequest As SecurityToken, signedHttpRequestValidationContext As SignedHttpRequestValidationContext, cancellationToken As CancellationToken) As Task(Of SecurityToken)" />
      <MemberSignature Language="F#" Value="abstract member ValidateSignedHttpRequestPayloadAsync : Microsoft.IdentityModel.Tokens.SecurityToken * Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.IdentityModel.Tokens.SecurityToken&gt;&#xA;override this.ValidateSignedHttpRequestPayloadAsync : Microsoft.IdentityModel.Tokens.SecurityToken * Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.IdentityModel.Tokens.SecurityToken&gt;" Usage="signedHttpRequestHandler.ValidateSignedHttpRequestPayloadAsync (signedHttpRequest, signedHttpRequestValidationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Protocols.SignedHttpRequest</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.IdentityModel.Tokens.SecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedHttpRequest" Type="Microsoft.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="signedHttpRequestValidationContext" Type="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="signedHttpRequest">A SignedHttpRequest.</param>
        <param name="signedHttpRequestValidationContext">A structure that wraps parameters needed for SignedHttpRequest validation.</param>
        <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        <summary>
            Validates signed http request payload.
            </summary>
        <returns />
        <remarks>
            The library doesn't provide any caching logic for replay validation purposes.
            <see cref="P:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestValidationParameters.ReplayValidatorAsync" /> delegate can be utilized for replay validation
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
