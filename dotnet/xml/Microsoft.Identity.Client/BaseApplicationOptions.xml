<Type Name="BaseApplicationOptions" FullName="Microsoft.Identity.Client.BaseApplicationOptions">
  <TypeSignature Language="C#" Value="public abstract class BaseApplicationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseApplicationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.BaseApplicationOptions" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseApplicationOptions" />
  <TypeSignature Language="F#" Value="type BaseApplicationOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.51.0.0</AssemblyVersion>
    <AssemblyVersion>4.52.0.0</AssemblyVersion>
    <AssemblyVersion>4.53.0.0</AssemblyVersion>
    <AssemblyVersion>4.54.0.0</AssemblyVersion>
    <AssemblyVersion>4.54.1.0</AssemblyVersion>
    <AssemblyVersion>4.55.0.0</AssemblyVersion>
    <AssemblyVersion>4.56.0.0</AssemblyVersion>
    <AssemblyVersion>4.57.0.0</AssemblyVersion>
    <AssemblyVersion>4.58.0.0</AssemblyVersion>
    <AssemblyVersion>4.58.1.0</AssemblyVersion>
    <AssemblyVersion>4.59.0.0</AssemblyVersion>
    <AssemblyVersion>4.60.0.0</AssemblyVersion>
    <AssemblyVersion>4.60.1.0</AssemblyVersion>
    <AssemblyVersion>4.60.2.0</AssemblyVersion>
    <AssemblyVersion>4.60.3.0</AssemblyVersion>
    <AssemblyVersion>4.61.0.0</AssemblyVersion>
    <AssemblyVersion>4.61.1.0</AssemblyVersion>
    <AssemblyVersion>4.61.3.0</AssemblyVersion>
    <AssemblyVersion>4.62.0.0</AssemblyVersion>
    <AssemblyVersion>4.63.0.0</AssemblyVersion>
    <AssemblyVersion>4.64.0.0</AssemblyVersion>
    <AssemblyVersion>4.64.1.0</AssemblyVersion>
    <AssemblyVersion>4.65.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Base class for options objects with string values loadable from a configuration file
            (for instance a JSON file, as in an asp.net configuration scenario)
            See https://aka.ms/msal-net-application-configuration
            See also derived classes <see cref="T:Microsoft.Identity.Client.ApplicationOptions" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseApplicationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.BaseApplicationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePiiLogging">
      <MemberSignature Language="C#" Value="public bool EnablePiiLogging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePiiLogging" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Client.BaseApplicationOptions.EnablePiiLogging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePiiLogging As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnablePiiLogging : bool with get, set" Usage="Microsoft.Identity.Client.BaseApplicationOptions.EnablePiiLogging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Flag to enable/disable logging of Personally Identifiable Information (PII).
            PII logs are never written to default outputs like Console, Logcat or NSLog
            Default is set to <c>false</c>, which ensures that your application is compliant with GDPR. You can set
            it to <c>true</c> for advanced debugging requiring PII. See https://aka.ms/msal-net-logging
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Identity.Client.BaseApplicationOptions.IsDefaultPlatformLoggingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultPlatformLoggingEnabled">
      <MemberSignature Language="C#" Value="public bool IsDefaultPlatformLoggingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultPlatformLoggingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Client.BaseApplicationOptions.IsDefaultPlatformLoggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefaultPlatformLoggingEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDefaultPlatformLoggingEnabled : bool with get, set" Usage="Microsoft.Identity.Client.BaseApplicationOptions.IsDefaultPlatformLoggingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Flag to enable/disable logging to platform defaults. In Desktop, Event Tracing is used. In iOS, NSLog is used.
            In Android, logcat is used. The default value is <c>false</c>. See https://aka.ms/msal-net-logging
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Identity.Client.BaseApplicationOptions.EnablePiiLogging" />
      </Docs>
    </Member>
    <Member MemberName="LogLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.LogLevel LogLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Identity.Client.LogLevel LogLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Client.BaseApplicationOptions.LogLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property LogLevel As LogLevel" />
      <MemberSignature Language="F#" Value="member this.LogLevel : Microsoft.Identity.Client.LogLevel with get, set" Usage="Microsoft.Identity.Client.BaseApplicationOptions.LogLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.65.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.LogLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enables you to configure the level of logging you want. The default value is <see cref="F:Microsoft.Identity.Client.LogLevel.Info" />. Setting it to <see cref="F:Microsoft.Identity.Client.LogLevel.Error" /> will only get errors
            Setting it to <see cref="F:Microsoft.Identity.Client.LogLevel.Warning" /> will get errors and warning, etc..
            See https://aka.ms/msal-net-logging
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
