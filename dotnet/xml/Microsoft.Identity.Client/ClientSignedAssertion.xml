<Type Name="ClientSignedAssertion" FullName="Microsoft.Identity.Client.ClientSignedAssertion">
  <TypeSignature Language="C#" Value="public class ClientSignedAssertion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientSignedAssertion extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.ClientSignedAssertion" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientSignedAssertion" />
  <TypeSignature Language="F#" Value="type ClientSignedAssertion = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.76.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Container returned from <c>WithClientAssertion</c>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientSignedAssertion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ClientSignedAssertion.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assertion">
      <MemberSignature Language="C#" Value="public string Assertion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assertion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Client.ClientSignedAssertion.Assertion" />
      <MemberSignature Language="VB.NET" Value="Public Property Assertion As String" />
      <MemberSignature Language="F#" Value="member this.Assertion : string with get, set" Usage="Microsoft.Identity.Client.ClientSignedAssertion.Assertion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Represents the client assertion (JWT) and optional mutual‑TLS binding certificate returned
            by the <c>clientAssertionProvider</c> callback supplied to
            <see cref="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.WithClientAssertion(System.Func{Microsoft.Identity.Client.AssertionRequestOptions,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.Identity.Client.ClientSignedAssertion}})" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            MSAL forwards <see cref="P:Microsoft.Identity.Client.ClientSignedAssertion.Assertion" /> to the token endpoint as the <c>client_assertion</c> parameter.
            When mutual‑TLS Proof‑of‑Possession (PoP) is enabled on the application and a
            <see cref="P:Microsoft.Identity.Client.ClientSignedAssertion.TokenBindingCertificate" /> is provided, MSAL sets <c>client_assertion_type</c> to
            <c>urn:ietf:params:oauth:client-assertion-type:jwt-pop</c>; otherwise it uses <c>jwt-bearer</c>.
            <br /><br />
            Guidance on constructing the client assertion (required claims, audience, and lifetime) is available at
            <see href="https://aka.ms/msal-net-client-assertion">aka.ms/msal-net-client-assertion</see>.
            The assertion is created by your callback; MSAL does not modify or re‑sign it.
            **Note:** It is up to the caller to cache the assertion and certificate if reuse is desired.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenBindingCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 TokenBindingCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 TokenBindingCertificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Client.ClientSignedAssertion.TokenBindingCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenBindingCertificate As X509Certificate2" />
      <MemberSignature Language="F#" Value="member this.TokenBindingCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="Microsoft.Identity.Client.ClientSignedAssertion.TokenBindingCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional. Certificate used to bind the client assertion for mutual‑TLS Proof‑of‑Possession (PoP).
            </summary>
        <value>To be added.</value>
        <remarks>
            Provide a value only when PoP is enabled on the application. The certificate should include an
            accessible private key. If <c>null</c>, MSAL treats the assertion as a bearer assertion and uses
            <c>client_assertion_type=jwt-bearer</c>.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
