<Type Name="ILongRunningWebApi" FullName="Microsoft.Identity.Client.ILongRunningWebApi">
  <TypeSignature Language="C#" Value="public interface ILongRunningWebApi" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ILongRunningWebApi" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.ILongRunningWebApi" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILongRunningWebApi" />
  <TypeSignature Language="F#" Value="type ILongRunningWebApi = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.48.1.0</AssemblyVersion>
    <AssemblyVersion>4.49.1.0</AssemblyVersion>
    <AssemblyVersion>4.51.0.0</AssemblyVersion>
    <AssemblyVersion>4.52.0.0</AssemblyVersion>
    <AssemblyVersion>4.53.0.0</AssemblyVersion>
    <AssemblyVersion>4.54.0.0</AssemblyVersion>
    <AssemblyVersion>4.54.1.0</AssemblyVersion>
    <AssemblyVersion>4.55.0.0</AssemblyVersion>
    <AssemblyVersion>4.56.0.0</AssemblyVersion>
    <AssemblyVersion>4.57.0.0</AssemblyVersion>
    <AssemblyVersion>4.58.0.0</AssemblyVersion>
    <AssemblyVersion>4.58.1.0</AssemblyVersion>
    <AssemblyVersion>4.59.0.0</AssemblyVersion>
    <AssemblyVersion>4.60.0.0</AssemblyVersion>
    <AssemblyVersion>4.60.1.0</AssemblyVersion>
    <AssemblyVersion>4.60.2.0</AssemblyVersion>
    <AssemblyVersion>4.60.3.0</AssemblyVersion>
    <AssemblyVersion>4.61.0.0</AssemblyVersion>
    <AssemblyVersion>4.61.1.0</AssemblyVersion>
    <AssemblyVersion>4.61.3.0</AssemblyVersion>
    <AssemblyVersion>4.62.0.0</AssemblyVersion>
    <AssemblyVersion>4.63.0.0</AssemblyVersion>
    <AssemblyVersion>4.64.0.0</AssemblyVersion>
    <AssemblyVersion>4.64.1.0</AssemblyVersion>
    <AssemblyVersion>4.65.0.0</AssemblyVersion>
    <AssemblyVersion>4.66.0.0</AssemblyVersion>
    <AssemblyVersion>4.66.1.0</AssemblyVersion>
    <AssemblyVersion>4.66.2.0</AssemblyVersion>
    <AssemblyVersion>4.67.0.0</AssemblyVersion>
    <AssemblyVersion>4.67.1.0</AssemblyVersion>
    <AssemblyVersion>4.67.2.0</AssemblyVersion>
    <AssemblyVersion>4.68.0.0</AssemblyVersion>
    <AssemblyVersion>4.69.1.0</AssemblyVersion>
    <AssemblyVersion>4.70.0.0</AssemblyVersion>
    <AssemblyVersion>4.70.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Methods for long-running or background processes in web APIs.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcquireTokenInLongRunningProcess">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenOnBehalfOfParameterBuilder AcquireTokenInLongRunningProcess (System.Collections.Generic.IEnumerable&lt;string&gt; scopes, string longRunningProcessSessionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Identity.Client.AcquireTokenOnBehalfOfParameterBuilder AcquireTokenInLongRunningProcess(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, string longRunningProcessSessionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ILongRunningWebApi.AcquireTokenInLongRunningProcess(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireTokenInLongRunningProcess (scopes As IEnumerable(Of String), longRunningProcessSessionKey As String) As AcquireTokenOnBehalfOfParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member AcquireTokenInLongRunningProcess : seq&lt;string&gt; * string -&gt; Microsoft.Identity.Client.AcquireTokenOnBehalfOfParameterBuilder" Usage="iLongRunningWebApi.AcquireTokenInLongRunningProcess (scopes, longRunningProcessSessionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.70.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenOnBehalfOfParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="longRunningProcessSessionKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scopes">Scopes requested to access a protected API.</param>
        <param name="longRunningProcessSessionKey">Key by which to look up the token in the cache.</param>
        <summary>
            Retrieves an access token from the cache using the provided cache key that can be used to
            access another downstream protected web API on behalf of a user using the OAuth 2.0 On-Behalf-Of flow.
            See <see href="https://aka.ms/msal-net-long-running-obo">Long-running OBO in MSAL.NET</see>.
            Use <seealso cref="M:Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationExtensions.StopLongRunningProcessInWebApiAsync(Microsoft.Identity.Client.ILongRunningWebApi,System.String,System.Threading.CancellationToken)" /> to stop the long running process
            and remove the associated tokens from the cache.
            </summary>
        <returns>A builder enabling you to add other parameters before executing the token request.</returns>
        <remarks>
            This method should be called during the long-running session to retrieve the token from the cache.
            </remarks>
        <exception cref="T:Microsoft.Identity.Client.MsalClientException"> The token cache does not contain a token
            with an OBO cache key that matches the <paramref name="longRunningProcessSessionKey" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InitiateLongRunningProcessInWebApi">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenOnBehalfOfParameterBuilder InitiateLongRunningProcessInWebApi (System.Collections.Generic.IEnumerable&lt;string&gt; scopes, string userToken, ref string longRunningProcessSessionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Identity.Client.AcquireTokenOnBehalfOfParameterBuilder InitiateLongRunningProcessInWebApi(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, string userToken, string&amp; longRunningProcessSessionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.ILongRunningWebApi.InitiateLongRunningProcessInWebApi(System.Collections.Generic.IEnumerable{System.String},System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitiateLongRunningProcessInWebApi (scopes As IEnumerable(Of String), userToken As String, ByRef longRunningProcessSessionKey As String) As AcquireTokenOnBehalfOfParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member InitiateLongRunningProcessInWebApi : seq&lt;string&gt; * string * string -&gt; Microsoft.Identity.Client.AcquireTokenOnBehalfOfParameterBuilder" Usage="iLongRunningWebApi.InitiateLongRunningProcessInWebApi (scopes, userToken, longRunningProcessSessionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.70.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenOnBehalfOfParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="userToken" Type="System.String" />
        <Parameter Name="longRunningProcessSessionKey" Type="System.String" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="scopes">Scopes requested to access a protected API.</param>
        <param name="userToken">A JSON Web Token which was used to call this web API and contains the credential information
            about the user on behalf of whom to get a token.</param>
        <param name="longRunningProcessSessionKey">Key by which to look up the token in the cache.
            If null, it will be set to the assertion hash of the <paramref name="userToken">userToken</paramref> by default.</param>
        <summary>
            Acquires an access token for this web API from the authority configured in the application,
            in order to access another downstream protected web API on behalf of a user using the OAuth 2.0 On-Behalf-Of flow.
            See <see href="https://aka.ms/msal-net-long-running-obo">Long-running OBO in MSAL.NET</see>.
            Pass an access token (not an ID token) which was used to call this confidential client application in the
            <paramref name="userToken">userToken</paramref> parameter.
            Use <seealso cref="M:Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationExtensions.StopLongRunningProcessInWebApiAsync(Microsoft.Identity.Client.ILongRunningWebApi,System.String,System.Threading.CancellationToken)" /> to stop the long running process
            and remove the associated tokens from the cache.
            </summary>
        <returns>A builder enabling you to add other parameters before executing the token request.</returns>
        <remarks>
            This method should be called once when the long-running session is started.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
