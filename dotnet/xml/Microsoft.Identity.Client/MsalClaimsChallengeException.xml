<Type Name="MsalClaimsChallengeException" FullName="Microsoft.Identity.Client.MsalClaimsChallengeException">
  <TypeSignature Language="C#" Value="public class MsalClaimsChallengeException : Microsoft.Identity.Client.MsalUiRequiredException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MsalClaimsChallengeException extends Microsoft.Identity.Client.MsalUiRequiredException" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.MsalClaimsChallengeException" />
  <TypeSignature Language="VB.NET" Value="Public Class MsalClaimsChallengeException&#xA;Inherits MsalUiRequiredException" />
  <TypeSignature Language="F#" Value="type MsalClaimsChallengeException = class&#xA;    inherit MsalUiRequiredException" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.60.0.0</AssemblyVersion>
    <AssemblyVersion>4.60.1.0</AssemblyVersion>
    <AssemblyVersion>4.60.2.0</AssemblyVersion>
    <AssemblyVersion>4.60.3.0</AssemblyVersion>
    <AssemblyVersion>4.61.0.0</AssemblyVersion>
    <AssemblyVersion>4.61.1.0</AssemblyVersion>
    <AssemblyVersion>4.61.3.0</AssemblyVersion>
    <AssemblyVersion>4.62.0.0</AssemblyVersion>
    <AssemblyVersion>4.63.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Identity.Client.MsalUiRequiredException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This exception indicates that claims have been returned from the endpoint that need to be resolved. This can be achieved by using them in the next authentication request.
            See <see href="https://aka.ms/msal-conditional-access-claims">Conditional Access and claims challenges</see>.
            See <see href="https://aka.ms/msal-conditional-access-claims-obo">Handling multifactor auth (MFA), Conditional Access, and incremental consent</see>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsalClaimsChallengeException (string errorCode, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string errorCode, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.MsalClaimsChallengeException.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (errorCode As String, errorMessage As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Identity.Client.MsalClaimsChallengeException : string * string -&gt; Microsoft.Identity.Client.MsalClaimsChallengeException" Usage="new Microsoft.Identity.Client.MsalClaimsChallengeException (errorCode, errorMessage)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.63.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorCode">
            The error code returned by the service or generated by the client. This is the code you can rely on
            for exception handling.
            </param>
        <param name="errorMessage">The error message that explains the reason for the exception.</param>
        <summary>
            Initializes a new instance of the exception class with a specified
            error code and error message.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsalClaimsChallengeException (string errorCode, string errorMessage, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string errorCode, string errorMessage, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.MsalClaimsChallengeException.#ctor(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (errorCode As String, errorMessage As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="new Microsoft.Identity.Client.MsalClaimsChallengeException : string * string * Exception -&gt; Microsoft.Identity.Client.MsalClaimsChallengeException" Usage="new Microsoft.Identity.Client.MsalClaimsChallengeException (errorCode, errorMessage, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.63.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorCode">
            The error code returned by the service or generated by the client. This is the code you can rely on
            for exception handling.
            </param>
        <param name="errorMessage">The error message that explains the reason for the exception.</param>
        <param name="innerException">Represents the root cause of the exception.</param>
        <summary>
            Initializes a new instance of the exception class with a specified
            error code, error message and inner exception indicating the root cause.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsalClaimsChallengeException (string errorCode, string errorMessage, Exception innerException, Microsoft.Identity.Client.UiRequiredExceptionClassification classification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string errorCode, string errorMessage, class System.Exception innerException, valuetype Microsoft.Identity.Client.UiRequiredExceptionClassification classification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.MsalClaimsChallengeException.#ctor(System.String,System.String,System.Exception,Microsoft.Identity.Client.UiRequiredExceptionClassification)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (errorCode As String, errorMessage As String, innerException As Exception, classification As UiRequiredExceptionClassification)" />
      <MemberSignature Language="F#" Value="new Microsoft.Identity.Client.MsalClaimsChallengeException : string * string * Exception * Microsoft.Identity.Client.UiRequiredExceptionClassification -&gt; Microsoft.Identity.Client.MsalClaimsChallengeException" Usage="new Microsoft.Identity.Client.MsalClaimsChallengeException (errorCode, errorMessage, innerException, classification)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.63.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="classification" Type="Microsoft.Identity.Client.UiRequiredExceptionClassification" />
      </Parameters>
      <Docs>
        <param name="errorCode">
            The error code returned by the service or generated by the client. This is the code you can rely on
            for exception handling.
            </param>
        <param name="errorMessage">The error message that explains the reason for the exception.</param>
        <param name="innerException">Represents the root cause of the exception.</param>
        <param name="classification">A higher level description for this exception, that allows handling code to 
            understand what type of action it needs to take to resolve the issue. </param>
        <summary>
            Initializes a new instance of the exception class with a specified
            error code, error message and inner exception indicating the root cause.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
