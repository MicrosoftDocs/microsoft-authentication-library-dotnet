<Type Name="AcquireTokenForClientParameterBuilder" FullName="Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder">
  <TypeSignature Language="C#" Value="public sealed class AcquireTokenForClientParameterBuilder : Microsoft.Identity.Client.AbstractConfidentialClientAcquireTokenParameterBuilder&lt;Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AcquireTokenForClientParameterBuilder extends Microsoft.Identity.Client.AbstractConfidentialClientAcquireTokenParameterBuilder`1&lt;class Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AcquireTokenForClientParameterBuilder&#xA;Inherits AbstractConfidentialClientAcquireTokenParameterBuilder(Of AcquireTokenForClientParameterBuilder)" />
  <TypeSignature Language="F#" Value="type AcquireTokenForClientParameterBuilder = class&#xA;    inherit AbstractConfidentialClientAcquireTokenParameterBuilder&lt;AcquireTokenForClientParameterBuilder&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.48.1.0</AssemblyVersion>
    <AssemblyVersion>4.49.1.0</AssemblyVersion>
    <AssemblyVersion>4.51.0.0</AssemblyVersion>
    <AssemblyVersion>4.52.0.0</AssemblyVersion>
    <AssemblyVersion>4.53.0.0</AssemblyVersion>
    <AssemblyVersion>4.54.0.0</AssemblyVersion>
    <AssemblyVersion>4.54.1.0</AssemblyVersion>
    <AssemblyVersion>4.55.0.0</AssemblyVersion>
    <AssemblyVersion>4.56.0.0</AssemblyVersion>
    <AssemblyVersion>4.57.0.0</AssemblyVersion>
    <AssemblyVersion>4.58.0.0</AssemblyVersion>
    <AssemblyVersion>4.58.1.0</AssemblyVersion>
    <AssemblyVersion>4.59.0.0</AssemblyVersion>
    <AssemblyVersion>4.60.0.0</AssemblyVersion>
    <AssemblyVersion>4.60.1.0</AssemblyVersion>
    <AssemblyVersion>4.60.2.0</AssemblyVersion>
    <AssemblyVersion>4.60.3.0</AssemblyVersion>
    <AssemblyVersion>4.61.0.0</AssemblyVersion>
    <AssemblyVersion>4.61.1.0</AssemblyVersion>
    <AssemblyVersion>4.61.3.0</AssemblyVersion>
    <AssemblyVersion>4.62.0.0</AssemblyVersion>
    <AssemblyVersion>4.63.0.0</AssemblyVersion>
    <AssemblyVersion>4.64.0.0</AssemblyVersion>
    <AssemblyVersion>4.64.1.0</AssemblyVersion>
    <AssemblyVersion>4.65.0.0</AssemblyVersion>
    <AssemblyVersion>4.66.0.0</AssemblyVersion>
    <AssemblyVersion>4.66.1.0</AssemblyVersion>
    <AssemblyVersion>4.66.2.0</AssemblyVersion>
    <AssemblyVersion>4.67.0.0</AssemblyVersion>
    <AssemblyVersion>4.67.1.0</AssemblyVersion>
    <AssemblyVersion>4.67.2.0</AssemblyVersion>
    <AssemblyVersion>4.68.0.0</AssemblyVersion>
    <AssemblyVersion>4.69.1.0</AssemblyVersion>
    <AssemblyVersion>4.70.0.0</AssemblyVersion>
    <AssemblyVersion>4.70.1.0</AssemblyVersion>
    <AssemblyVersion>4.70.2.0</AssemblyVersion>
    <AssemblyVersion>4.71.0.0</AssemblyVersion>
    <AssemblyVersion>4.71.1.0</AssemblyVersion>
    <AssemblyVersion>4.74.0.0</AssemblyVersion>
    <AssemblyVersion>4.74.1.0</AssemblyVersion>
    <AssemblyVersion>4.76.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Identity.Client.AbstractConfidentialClientAcquireTokenParameterBuilder&lt;Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Builder for AcquireTokenForClient (used in client credential flows, in daemon applications).
            See https://aka.ms/msal-net-client-credentials
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder.Validate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="acquireTokenForClientParameterBuilder.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
        <altmember cref="M:Microsoft.Identity.Client.ConfidentialClientApplicationBuilder.Validate" />
      </Docs>
    </Member>
    <Member MemberName="WithAzureRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithAzureRegion (bool useAzureRegion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithAzureRegion(bool useAzureRegion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder.WithAzureRegion(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAzureRegion (useAzureRegion As Boolean) As AcquireTokenForClientParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithAzureRegion : bool -&gt; Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder" Usage="acquireTokenForClientParameterBuilder.WithAzureRegion useAzureRegion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use WithAzureRegion on the ConfidentialClientApplicationBuilder object", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use WithAzureRegion on the ConfidentialClientApplicationBuilder object", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useAzureRegion" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useAzureRegion">To be added.</param>
        <summary>
            Please use WithAzureRegion on the ConfidentialClientApplicationBuilder object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithFmiPath">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithFmiPath (string pathSuffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithFmiPath(string pathSuffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder.WithFmiPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithFmiPath (pathSuffix As String) As AcquireTokenForClientParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithFmiPath : string -&gt; Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder" Usage="acquireTokenForClientParameterBuilder.WithFmiPath pathSuffix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathSuffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathSuffix">To be added.</param>
        <summary> 
            Adds an fmi_path parameter to the request. It modifies the subject of the token. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithForceRefresh">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithForceRefresh (bool forceRefresh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithForceRefresh(bool forceRefresh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder.WithForceRefresh(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithForceRefresh (forceRefresh As Boolean) As AcquireTokenForClientParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithForceRefresh : bool -&gt; Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder" Usage="acquireTokenForClientParameterBuilder.WithForceRefresh forceRefresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceRefresh" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceRefresh">
            If <c>true</c>, the request will ignore cached access tokens on read, but will still write them to the cache once obtained from the identity provider. The default is <c>false</c></param>
        <summary>
            Specifies if the client application should ignore access tokens when reading the token cache. 
            New tokens will still be written to the application token cache.
            By default the token is taken from the application token cache (forceRefresh=false)
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>
            Do not use this flag except in well understood cases. Identity providers will throttle clients that make too many similar token requests.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMtlsProofOfPossession">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithMtlsProofOfPossession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithMtlsProofOfPossession() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder.WithMtlsProofOfPossession" />
      <MemberSignature Language="VB.NET" Value="Public Function WithMtlsProofOfPossession () As AcquireTokenForClientParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithMtlsProofOfPossession : unit -&gt; Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder" Usage="acquireTokenForClientParameterBuilder.WithMtlsProofOfPossession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Specifies that the certificate provided will be used for PoP tokens with mTLS (Mutual TLS) authentication.
            For more information, refer to the <see href="https://aka.ms/mtls-pop">Proof-of-Possession documentation</see>.
            </summary>
        <returns>The current instance of <see cref="T:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder" /> to enable method chaining.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPreferredAzureRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithPreferredAzureRegion (bool useAzureRegion = true, string regionUsedIfAutoDetectFails = &quot;&quot;, bool fallbackToGlobal = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithPreferredAzureRegion(bool useAzureRegion, string regionUsedIfAutoDetectFails, bool fallbackToGlobal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder.WithPreferredAzureRegion(System.Boolean,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithPreferredAzureRegion (Optional useAzureRegion As Boolean = true, Optional regionUsedIfAutoDetectFails As String = &quot;&quot;, Optional fallbackToGlobal As Boolean = true) As AcquireTokenForClientParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithPreferredAzureRegion : bool * string * bool -&gt; Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder" Usage="acquireTokenForClientParameterBuilder.WithPreferredAzureRegion (useAzureRegion, regionUsedIfAutoDetectFails, fallbackToGlobal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use WithAzureRegion on the ConfidentialClientApplicationBuilder object", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use WithAzureRegion on the ConfidentialClientApplicationBuilder object", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useAzureRegion" Type="System.Boolean" />
        <Parameter Name="regionUsedIfAutoDetectFails" Type="System.String" />
        <Parameter Name="fallbackToGlobal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useAzureRegion">To be added.</param>
        <param name="regionUsedIfAutoDetectFails">To be added.</param>
        <param name="fallbackToGlobal">To be added.</param>
        <summary>
            Please use WithAzureRegion on the ConfidentialClientApplicationBuilder object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSendX5C">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithSendX5C (bool withSendX5C);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder WithSendX5C(bool withSendX5C) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder.WithSendX5C(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSendX5C (withSendX5C As Boolean) As AcquireTokenForClientParameterBuilder" />
      <MemberSignature Language="F#" Value="member this.WithSendX5C : bool -&gt; Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder" Usage="acquireTokenForClientParameterBuilder.WithSendX5C withSendX5C" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.76.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenForClientParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="withSendX5C" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="withSendX5C">
          <c>true</c> if the x5c should be sent. Otherwise <c>false</c>.
            The default is <c>false</c></param>
        <summary>
            Applicable to first-party applications only, this method also allows to specify 
            if the <see href="https://datatracker.ietf.org/doc/html/rfc7517#section-4.7">x5c claim</see> should be sent to Azure AD.
            Sending the x5c enables application developers to achieve easy certificate roll-over in Azure AD:
            this method will send the certificate chain to Azure AD along with the token request,
            so that Azure AD can use it to validate the subject name based on a trusted issuer policy.
            This saves the application admin from the need to explicitly manage the certificate rollover
            (either via portal or PowerShell/CLI operation). For details see https://aka.ms/msal-net-sni
            </summary>
        <returns>The builder to chain the .With methods</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
