<Type Name="WindowsNativeUtils" FullName="Microsoft.Identity.Client.Utils.Windows.WindowsNativeUtils">
  <TypeSignature Language="C#" Value="public static class WindowsNativeUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsNativeUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.Utils.Windows.WindowsNativeUtils" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsNativeUtils" />
  <TypeSignature Language="F#" Value="type WindowsNativeUtils = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.48.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Public Windows native methods
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="InitializeProcessSecurity">
      <MemberSignature Language="C#" Value="public static void InitializeProcessSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitializeProcessSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.Utils.Windows.WindowsNativeUtils.InitializeProcessSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitializeProcessSecurity ()" />
      <MemberSignature Language="F#" Value="static member InitializeProcessSecurity : unit -&gt; unit" Usage="Microsoft.Identity.Client.Utils.Windows.WindowsNativeUtils.InitializeProcessSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.48.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Registers security and sets the security values for the process.
            </summary>
        <remarks>
            Workaround to enable WAM Account Picker in an elevated process.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElevatedUser">
      <MemberSignature Language="C#" Value="public static bool IsElevatedUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsElevatedUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.Utils.Windows.WindowsNativeUtils.IsElevatedUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsElevatedUser () As Boolean" />
      <MemberSignature Language="F#" Value="static member IsElevatedUser : unit -&gt; bool" Usage="Microsoft.Identity.Client.Utils.Windows.WindowsNativeUtils.IsElevatedUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.48.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Tests whether the current user is a member of the Administrator's group.
            </summary>
        <returns>True if the current user is an Admin; false, otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
