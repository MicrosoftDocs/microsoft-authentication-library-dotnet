<Type Name="MsalDistributedTokenCacheAdapterOptions" FullName="Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions">
  <TypeSignature Language="C#" Value="public class MsalDistributedTokenCacheAdapterOptions : Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MsalDistributedTokenCacheAdapterOptions extends Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class MsalDistributedTokenCacheAdapterOptions&#xA;Inherits DistributedCacheEntryOptions" />
  <TypeSignature Language="F#" Value="type MsalDistributedTokenCacheAdapterOptions = class&#xA;    inherit DistributedCacheEntryOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Web.TokenCache</AssemblyName>
    <AssemblyVersion>3.8.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for the MSAL token cache serialization adapter,
            which delegates the serialization to the <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache" /> implementations
            available with .NET Core.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsalDistributedTokenCacheAdapterOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenCache</AssemblyName>
        <AssemblyVersion>3.8.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableL1Cache">
      <MemberSignature Language="C#" Value="public bool DisableL1Cache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableL1Cache" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.DisableL1Cache" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableL1Cache As Boolean" />
      <MemberSignature Language="F#" Value="member this.DisableL1Cache : bool with get, set" Usage="Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.DisableL1Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenCache</AssemblyName>
        <AssemblyVersion>3.8.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Disable the in-memory (L1) cache.
            Useful in scenarios where multiple apps share the same
            distributed (L2) cache.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <c>false.</c>
      </Docs>
    </Member>
    <Member MemberName="EnableAsyncL2Write">
      <MemberSignature Language="C#" Value="public bool EnableAsyncL2Write { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAsyncL2Write" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.EnableAsyncL2Write" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAsyncL2Write As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableAsyncL2Write : bool with get, set" Usage="Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.EnableAsyncL2Write" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenCache</AssemblyName>
        <AssemblyVersion>3.8.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enable writing to the distributed (L2) cache to be async (i.e. fire-and-forget).
            This improves performance as the MSAL.NET will not have to wait
            for the write to complete.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <c>false.</c>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public bool Encrypt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Encrypt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.Encrypt" />
      <MemberSignature Language="VB.NET" Value="Public Property Encrypt As Boolean" />
      <MemberSignature Language="F#" Value="member this.Encrypt : bool with get, set" Usage="Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.Encrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenCache</AssemblyName>
        <AssemblyVersion>3.8.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Should the token cache be encrypted.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <c>false.</c>
      </Docs>
    </Member>
    <Member MemberName="L1CacheOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Caching.Memory.MemoryCacheOptions L1CacheOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Caching.Memory.MemoryCacheOptions L1CacheOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.L1CacheOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property L1CacheOptions As MemoryCacheOptions" />
      <MemberSignature Language="F#" Value="member this.L1CacheOptions : Microsoft.Extensions.Caching.Memory.MemoryCacheOptions with get, set" Usage="Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.L1CacheOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenCache</AssemblyName>
        <AssemblyVersion>3.8.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.MemoryCacheOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Options of the in-memory (L1) cache.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnL2CacheFailure">
      <MemberSignature Language="C#" Value="public Func&lt;Exception,bool&gt;? OnL2CacheFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Exception, bool&gt; OnL2CacheFailure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.OnL2CacheFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property OnL2CacheFailure As Func(Of Exception, Boolean)" />
      <MemberSignature Language="F#" Value="member this.OnL2CacheFailure : Func&lt;Exception, bool&gt; with get, set" Usage="Microsoft.Identity.Web.TokenCacheProviders.Distributed.MsalDistributedTokenCacheAdapterOptions.OnL2CacheFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenCache</AssemblyName>
        <AssemblyVersion>3.8.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Exception,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Callback offered to the app to be notified when the L2 cache fails.
            This way the app is given the possibility to act on the L2 cache,
            for instance, in the case of Redis exception, to reconnect. This is left to the application as it's
            the only one that knows about the real implementation of the L2 cache.
            The handler should return <c>true</c> if the cache should try the operation again, and
            <c>false</c> otherwise. When <c>true</c> is passed and the retry fails, an exception
            will be thrown.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
