<Type Name="TokenAcquirerFactory" FullName="Microsoft.Identity.Web.TokenAcquirerFactory">
  <TypeSignature Language="C#" Value="public class TokenAcquirerFactory : Microsoft.Identity.Abstractions.ITokenAcquirerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TokenAcquirerFactory extends System.Object implements class Microsoft.Identity.Abstractions.ITokenAcquirerFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Web.TokenAcquirerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class TokenAcquirerFactory&#xA;Implements ITokenAcquirerFactory" />
  <TypeSignature Language="F#" Value="type TokenAcquirerFactory = class&#xA;    interface ITokenAcquirerFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
    <AssemblyVersion>2.6.1.0</AssemblyVersion>
    <AssemblyVersion>2.7.0.0</AssemblyVersion>
    <AssemblyVersion>2.8.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>2.10.0.0</AssemblyVersion>
    <AssemblyVersion>2.11.0.0</AssemblyVersion>
    <AssemblyVersion>2.11.1.0</AssemblyVersion>
    <AssemblyVersion>2.12.4.0</AssemblyVersion>
    <AssemblyVersion>2.13.0.0</AssemblyVersion>
    <AssemblyVersion>2.13.1.0</AssemblyVersion>
    <AssemblyVersion>2.13.2.0</AssemblyVersion>
    <AssemblyVersion>2.13.3.0</AssemblyVersion>
    <AssemblyVersion>2.13.4.0</AssemblyVersion>
    <AssemblyVersion>2.14.0.0</AssemblyVersion>
    <AssemblyVersion>2.15.1.0</AssemblyVersion>
    <AssemblyVersion>2.15.2.0</AssemblyVersion>
    <AssemblyVersion>2.15.3.0</AssemblyVersion>
    <AssemblyVersion>2.15.5.0</AssemblyVersion>
    <AssemblyVersion>2.16.0.0</AssemblyVersion>
    <AssemblyVersion>2.16.1.0</AssemblyVersion>
    <AssemblyVersion>2.17.0.0</AssemblyVersion>
    <AssemblyVersion>2.17.1.0</AssemblyVersion>
    <AssemblyVersion>2.17.2.0</AssemblyVersion>
    <AssemblyVersion>2.17.3.0</AssemblyVersion>
    <AssemblyVersion>2.17.4.0</AssemblyVersion>
    <AssemblyVersion>2.17.5.0</AssemblyVersion>
    <AssemblyVersion>2.18.1.0</AssemblyVersion>
    <AssemblyVersion>2.18.2.0</AssemblyVersion>
    <AssemblyVersion>2.19.0.0</AssemblyVersion>
    <AssemblyVersion>2.19.1.0</AssemblyVersion>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.1.0</AssemblyVersion>
    <AssemblyVersion>3.2.2.0</AssemblyVersion>
    <AssemblyVersion>3.3.0.0</AssemblyVersion>
    <AssemblyVersion>3.3.1.0</AssemblyVersion>
    <AssemblyVersion>3.4.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>3.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Identity.Abstractions.ITokenAcquirerFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Factory of a token acquirer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TokenAcquirerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructor
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public IServiceProvider Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; IServiceProvider" Usage="tokenAcquirerFactory.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Build the Token acquirer. This does the composition of all the services you have added to
            <see cref="P:Microsoft.Identity.Web.TokenAcquirerFactory.Services" />, and returns a service provider, which you can then use to get access
            to the services you have added.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
        <example>
            The following example shows how you add Microsoft GraphServiceClient to the services
            and use it after you've built the token acquirer factory. The authentication is handled
            transparently based on the information in the appsettings.json.
            <format type="text/markdown"><![CDATA[
             [!code-csharp[ConvertType](~/../tests/DevApps/daemon-app/daemon-console-calling-msgraph/Program.cs?highlight=7)]
            ]]></format></example>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Configuration.IConfiguration Configuration { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Configuration.IConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Web.TokenAcquirerFactory.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As IConfiguration" />
      <MemberSignature Language="F#" Value="member this.Configuration : Microsoft.Extensions.Configuration.IConfiguration with get, set" Usage="Microsoft.Identity.Web.TokenAcquirerFactory.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.IConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Configuration. By default the configuration contains the content of the 
            appsettings.json file, provided this file is copied in the folder of the app.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineConfiguration">
      <MemberSignature Language="C#" Value="protected virtual string DefineConfiguration (Microsoft.Extensions.Configuration.IConfigurationBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string DefineConfiguration(class Microsoft.Extensions.Configuration.IConfigurationBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.DefineConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DefineConfiguration (builder As IConfigurationBuilder) As String" />
      <MemberSignature Language="F#" Value="abstract member DefineConfiguration : Microsoft.Extensions.Configuration.IConfigurationBuilder -&gt; string&#xA;override this.DefineConfiguration : Microsoft.Extensions.Configuration.IConfigurationBuilder -&gt; string" Usage="tokenAcquirerFactory.DefineConfiguration builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Configuration.IConfigurationBuilder" />
      </Parameters>
      <Docs>
        <param name="builder" />
        <summary>
            Adding additional configuration and returns the base path for configuration
            files
            </summary>
        <returns>Returns the base path for configuration files</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultInstance">
      <MemberSignature Language="C#" Value="public static Microsoft.Identity.Web.TokenAcquirerFactory GetDefaultInstance (string configSection = &quot;AzureAd&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Identity.Web.TokenAcquirerFactory GetDefaultInstance(string configSection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.GetDefaultInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultInstance (Optional configSection As String = &quot;AzureAd&quot;) As TokenAcquirerFactory" />
      <MemberSignature Language="F#" Value="static member GetDefaultInstance : string -&gt; Microsoft.Identity.Web.TokenAcquirerFactory" Usage="Microsoft.Identity.Web.TokenAcquirerFactory.GetDefaultInstance configSection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Calls Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(IConfiguration, Object).")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Calls Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(IConfiguration, Object).")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Web.TokenAcquirerFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configSection" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configSection">To be added.</param>
        <summary>
            Get the default instance. Use this method to retrieve the instance, optionally add some services to 
            the service collection, and build the instance.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ConvertType](~/../tests/DevApps/daemon-app/daemon-console-calling-msgraph/Program.cs?highlight=5)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetDefaultInstance&lt;T&gt; (string configSection = &quot;AzureAd&quot;) where T : Microsoft.Identity.Web.TokenAcquirerFactory, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetDefaultInstance&lt;.ctor (class Microsoft.Identity.Web.TokenAcquirerFactory) T&gt;(string configSection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.GetDefaultInstance``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultInstance(Of T As {TokenAcquirerFactoryNew}) (Optional configSection As String = &quot;AzureAd&quot;) As T" />
      <MemberSignature Language="F#" Value="static member GetDefaultInstance : string -&gt; 'T (requires 'T :&gt; Microsoft.Identity.Web.TokenAcquirerFactory and 'T : (new : unit -&gt; 'T))" Usage="Microsoft.Identity.Web.TokenAcquirerFactory.GetDefaultInstance configSection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Calls Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(IConfiguration, Object).")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Calls Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(IConfiguration, Object).")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.Identity.Web.TokenAcquirerFactory</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="configSection" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="configSection">To be added.</param>
        <summary>
            Get the default instance of a token acquirer factory. Use this method, for instance, if you have an ASP.NET OWIN application
            and you want to get the default instance of the OwinTokenAcquirerFactory.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
             [!code-csharp[ConvertType](~/../tests/DevApps/aspnet-mvc/OwinWebApp/App_Start/Startup.Auth.cs?highlight=22)]
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAcquirer">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Abstractions.ITokenAcquirer GetTokenAcquirer (Microsoft.Identity.Abstractions.IdentityApplicationOptions applicationIdentityOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Identity.Abstractions.ITokenAcquirer GetTokenAcquirer(class Microsoft.Identity.Abstractions.IdentityApplicationOptions applicationIdentityOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.GetTokenAcquirer(Microsoft.Identity.Abstractions.IdentityApplicationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAcquirer (applicationIdentityOptions As IdentityApplicationOptions) As ITokenAcquirer" />
      <MemberSignature Language="F#" Value="abstract member GetTokenAcquirer : Microsoft.Identity.Abstractions.IdentityApplicationOptions -&gt; Microsoft.Identity.Abstractions.ITokenAcquirer&#xA;override this.GetTokenAcquirer : Microsoft.Identity.Abstractions.IdentityApplicationOptions -&gt; Microsoft.Identity.Abstractions.ITokenAcquirer" Usage="tokenAcquirerFactory.GetTokenAcquirer applicationIdentityOptions" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Identity.Abstractions.ITokenAcquirerFactory.GetTokenAcquirer(Microsoft.Identity.Abstractions.IdentityApplicationOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.ITokenAcquirer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationIdentityOptions" Type="Microsoft.Identity.Abstractions.IdentityApplicationOptions" />
      </Parameters>
      <Docs>
        <param name="applicationIdentityOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetTokenAcquirer">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Abstractions.ITokenAcquirer GetTokenAcquirer (string optionName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Identity.Abstractions.ITokenAcquirer GetTokenAcquirer(string optionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.GetTokenAcquirer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAcquirer (Optional optionName As String = &quot;&quot;) As ITokenAcquirer" />
      <MemberSignature Language="F#" Value="abstract member GetTokenAcquirer : string -&gt; Microsoft.Identity.Abstractions.ITokenAcquirer&#xA;override this.GetTokenAcquirer : string -&gt; Microsoft.Identity.Abstractions.ITokenAcquirer" Usage="tokenAcquirerFactory.GetTokenAcquirer optionName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Identity.Abstractions.ITokenAcquirerFactory.GetTokenAcquirer(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.ITokenAcquirer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="optionName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetTokenAcquirer">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Abstractions.ITokenAcquirer GetTokenAcquirer (string authority, string clientId, System.Collections.Generic.IEnumerable&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt; clientCredentials, string? region = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Identity.Abstractions.ITokenAcquirer GetTokenAcquirer(string authority, string clientId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Identity.Abstractions.CredentialDescription&gt; clientCredentials, string region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.GetTokenAcquirer(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Identity.Abstractions.CredentialDescription},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAcquirer (authority As String, clientId As String, clientCredentials As IEnumerable(Of CredentialDescription), Optional region As String = Nothing) As ITokenAcquirer" />
      <MemberSignature Language="F#" Value="member this.GetTokenAcquirer : string * string * seq&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt; * string -&gt; Microsoft.Identity.Abstractions.ITokenAcquirer" Usage="tokenAcquirerFactory.GetTokenAcquirer (authority, clientId, clientCredentials, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.ITokenAcquirer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="clientCredentials" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt;" />
        <Parameter Name="region" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authority">To be added.</param>
        <param name="clientId">To be added.</param>
        <param name="clientCredentials">To be added.</param>
        <param name="region">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="PreBuild">
      <MemberSignature Language="C#" Value="protected virtual void PreBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreBuild() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.TokenAcquirerFactory.PreBuild" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreBuild ()" />
      <MemberSignature Language="F#" Value="abstract member PreBuild : unit -&gt; unit&#xA;override this.PreBuild : unit -&gt; unit" Usage="tokenAcquirerFactory.PreBuild " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Additional processing before the Build (adds an in-memory token cache if no cache was added)
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider? ServiceProvider { get; protected internal set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Web.TokenAcquirerFactory.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider with get, set" Usage="Microsoft.Identity.Web.TokenAcquirerFactory.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Service Provider. The service provider is only available once the factory was built
            using <see cref="M:Microsoft.Identity.Web.TokenAcquirerFactory.Build" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.ServiceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.ServiceCollection Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Web.TokenAcquirerFactory.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As ServiceCollection" />
      <MemberSignature Language="F#" Value="member this.Services : Microsoft.Extensions.DependencyInjection.ServiceCollection" Usage="Microsoft.Identity.Web.TokenAcquirerFactory.Services" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.ServiceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Services. Used in the initialization phase
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException" />
        <see cref="M:Microsoft.Identity.Web.TokenAcquirerFactory.Build" />
      </Docs>
    </Member>
  </Members>
</Type>
