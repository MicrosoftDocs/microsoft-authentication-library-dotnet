<Type Name="ServiceCollectionExtensions" FullName="Microsoft.Identity.Web.ServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class ServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Web.ServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type ServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
    <AssemblyVersion>2.6.1.0</AssemblyVersion>
    <AssemblyVersion>2.7.0.0</AssemblyVersion>
    <AssemblyVersion>2.8.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>2.10.0.0</AssemblyVersion>
    <AssemblyVersion>2.11.0.0</AssemblyVersion>
    <AssemblyVersion>2.11.1.0</AssemblyVersion>
    <AssemblyVersion>2.12.4.0</AssemblyVersion>
    <AssemblyVersion>2.13.0.0</AssemblyVersion>
    <AssemblyVersion>2.13.1.0</AssemblyVersion>
    <AssemblyVersion>2.13.2.0</AssemblyVersion>
    <AssemblyVersion>2.13.3.0</AssemblyVersion>
    <AssemblyVersion>2.13.4.0</AssemblyVersion>
    <AssemblyVersion>2.14.0.0</AssemblyVersion>
    <AssemblyVersion>2.15.1.0</AssemblyVersion>
    <AssemblyVersion>2.15.2.0</AssemblyVersion>
    <AssemblyVersion>2.15.3.0</AssemblyVersion>
    <AssemblyVersion>2.15.5.0</AssemblyVersion>
    <AssemblyVersion>2.16.0.0</AssemblyVersion>
    <AssemblyVersion>2.16.1.0</AssemblyVersion>
    <AssemblyVersion>2.17.0.0</AssemblyVersion>
    <AssemblyVersion>2.17.1.0</AssemblyVersion>
    <AssemblyVersion>2.17.2.0</AssemblyVersion>
    <AssemblyVersion>2.17.3.0</AssemblyVersion>
    <AssemblyVersion>2.17.4.0</AssemblyVersion>
    <AssemblyVersion>2.17.5.0</AssemblyVersion>
    <AssemblyVersion>2.18.1.0</AssemblyVersion>
    <AssemblyVersion>2.18.2.0</AssemblyVersion>
    <AssemblyVersion>2.19.0.0</AssemblyVersion>
    <AssemblyVersion>2.19.1.0</AssemblyVersion>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.1.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.1.0</AssemblyVersion>
    <AssemblyVersion>3.2.2.0</AssemblyVersion>
    <AssemblyVersion>3.3.0.0</AssemblyVersion>
    <AssemblyVersion>3.3.1.0</AssemblyVersion>
    <AssemblyVersion>3.4.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>3.6.0.0</AssemblyVersion>
    <AssemblyVersion>3.6.1.0</AssemblyVersion>
    <AssemblyVersion>3.6.2.0</AssemblyVersion>
    <AssemblyVersion>3.7.0.0</AssemblyVersion>
    <AssemblyVersion>3.7.1.0</AssemblyVersion>
    <AssemblyVersion>3.8.0.0</AssemblyVersion>
    <AssemblyVersion>3.8.1.0</AssemblyVersion>
    <AssemblyVersion>3.8.2.0</AssemblyVersion>
    <AssemblyVersion>3.8.3.0</AssemblyVersion>
    <AssemblyVersion>3.8.4.0</AssemblyVersion>
    <AssemblyVersion>3.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions for IServiceCollection for startup initialization of web APIs.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddTokenAcquisition">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddTokenAcquisition (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, bool isTokenAcquisitionSingleton = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddTokenAcquisition(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, bool isTokenAcquisitionSingleton) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.ServiceCollectionExtensions.AddTokenAcquisition(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTokenAcquisition (services As IServiceCollection, Optional isTokenAcquisitionSingleton As Boolean = false) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddTokenAcquisition : Microsoft.Extensions.DependencyInjection.IServiceCollection * bool -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Identity.Web.ServiceCollectionExtensions.AddTokenAcquisition (services, isTokenAcquisitionSingleton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web.TokenAcquisition</AssemblyName>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="isTokenAcquisitionSingleton" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="services">Service collection.</param>
        <param name="isTokenAcquisitionSingleton">Specifies if an instance of <see cref="T:Microsoft.Identity.Web.ITokenAcquisition" /> should be a singleton.</param>
        <summary>
             Add the token acquisition service.
             </summary>
        <returns>The service collection.</returns>
        <remarks>To be added.</remarks>
        <example>
             This method is typically called from the <c>ConfigureServices(IServiceCollection services)</c> in Startup.cs.
             Note that the implementation of the token cache can be chosen separately.
            
             <code>
             // Token acquisition service and its cache implementation as a session cache
             services.AddTokenAcquisition()
             .AddDistributedMemoryCache()
             .AddSession()
             .AddSessionBasedTokenCache();
             </code></example>
      </Docs>
    </Member>
  </Members>
</Type>
