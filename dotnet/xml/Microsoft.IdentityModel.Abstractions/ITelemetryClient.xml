<Type Name="ITelemetryClient" FullName="Microsoft.IdentityModel.Abstractions.ITelemetryClient">
  <TypeSignature Language="C#" Value="public interface ITelemetryClient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITelemetryClient" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Abstractions.ITelemetryClient" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITelemetryClient" />
  <TypeSignature Language="F#" Value="type ITelemetryClient = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Abstractions</AssemblyName>
    <AssemblyVersion>6.27.0.0</AssemblyVersion>
    <AssemblyVersion>6.28.1.0</AssemblyVersion>
    <AssemblyVersion>6.29.0.0</AssemblyVersion>
    <AssemblyVersion>6.30.0.0</AssemblyVersion>
    <AssemblyVersion>6.30.1.0</AssemblyVersion>
    <AssemblyVersion>6.31.0.0</AssemblyVersion>
    <AssemblyVersion>6.32.0.0</AssemblyVersion>
    <AssemblyVersion>6.32.1.0</AssemblyVersion>
    <AssemblyVersion>6.32.2.0</AssemblyVersion>
    <AssemblyVersion>6.32.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.2.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.2.0.0</AssemblyVersion>
    <AssemblyVersion>7.3.1.0</AssemblyVersion>
    <AssemblyVersion>7.4.0.0</AssemblyVersion>
    <AssemblyVersion>7.4.1.0</AssemblyVersion>
    <AssemblyVersion>7.5.0.0</AssemblyVersion>
    <AssemblyVersion>7.5.1.0</AssemblyVersion>
    <AssemblyVersion>7.5.2.0</AssemblyVersion>
    <AssemblyVersion>7.6.0.0</AssemblyVersion>
    <AssemblyVersion>7.6.2.0</AssemblyVersion>
    <AssemblyVersion>7.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface for Telemetry tracking.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClientId">
      <MemberSignature Language="C#" Value="public string ClientId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Abstractions.ITelemetryClient.ClientId" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientId As String" />
      <MemberSignature Language="F#" Value="member this.ClientId : string with get, set" Usage="Microsoft.IdentityModel.Abstractions.ITelemetryClient.ClientId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Abstractions</AssemblyName>
        <AssemblyVersion>7.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the application or client ID that telemetry is being sent for.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Abstractions.ITelemetryClient.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit" Usage="iTelemetryClient.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Abstractions</AssemblyName>
        <AssemblyVersion>7.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Perform any necessary bootstrapping for the telemetry client.
            </summary>
        <remarks>
            The expectation is that this should only be called once for the lifetime of the object however the
            implementation should be idempotent.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Abstractions.ITelemetryClient.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsEnabled : unit -&gt; bool" Usage="iTelemetryClient.IsEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Abstractions</AssemblyName>
        <AssemblyVersion>7.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Checks to see if telemetry is enabled all up.
            </summary>
        <returns>
            Returns <see langword="true" /> if telemetry should be sent; <see langword="false" /> otherwise.
            </returns>
        <remarks>
            This check should be used to gate any resource intensive operations to generate telemetry as well.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Abstractions.ITelemetryClient.IsEnabled(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (eventName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsEnabled : string -&gt; bool" Usage="iTelemetryClient.IsEnabled eventName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Abstractions</AssemblyName>
        <AssemblyVersion>7.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">Name of the event to check.</param>
        <summary>
            Checks to see if telemetry is enabled for the named event.
            </summary>
        <returns>
            Returns <see langword="true" /> if telemetry should be sent for <paramref name="eventName" />;
            <see langword="false" /> otherwise.
            </returns>
        <remarks>
            This check should be used to gate any resource intensive operations to generate telemetry as well.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackEvent">
      <MemberSignature Language="C#" Value="public void TrackEvent (Microsoft.IdentityModel.Abstractions.TelemetryEventDetails eventDetails);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrackEvent(class Microsoft.IdentityModel.Abstractions.TelemetryEventDetails eventDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Abstractions.ITelemetryClient.TrackEvent(Microsoft.IdentityModel.Abstractions.TelemetryEventDetails)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrackEvent (eventDetails As TelemetryEventDetails)" />
      <MemberSignature Language="F#" Value="abstract member TrackEvent : Microsoft.IdentityModel.Abstractions.TelemetryEventDetails -&gt; unit" Usage="iTelemetryClient.TrackEvent eventDetails" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Abstractions</AssemblyName>
        <AssemblyVersion>7.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventDetails" Type="Microsoft.IdentityModel.Abstractions.TelemetryEventDetails" />
      </Parameters>
      <Docs>
        <param name="eventDetails">Details of the event to track.</param>
        <summary>
            Tracks an instance of a named event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackEvent">
      <MemberSignature Language="C#" Value="public void TrackEvent (string eventName, System.Collections.Generic.IDictionary&lt;string,string&gt;? stringProperties = default, System.Collections.Generic.IDictionary&lt;string,long&gt;? longProperties = default, System.Collections.Generic.IDictionary&lt;string,bool&gt;? boolProperties = default, System.Collections.Generic.IDictionary&lt;string,DateTime&gt;? dateTimeProperties = default, System.Collections.Generic.IDictionary&lt;string,double&gt;? doubleProperties = default, System.Collections.Generic.IDictionary&lt;string,Guid&gt;? guidProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrackEvent(string eventName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; stringProperties, class System.Collections.Generic.IDictionary`2&lt;string, int64&gt; longProperties, class System.Collections.Generic.IDictionary`2&lt;string, bool&gt; boolProperties, class System.Collections.Generic.IDictionary`2&lt;string, valuetype System.DateTime&gt; dateTimeProperties, class System.Collections.Generic.IDictionary`2&lt;string, float64&gt; doubleProperties, class System.Collections.Generic.IDictionary`2&lt;string, valuetype System.Guid&gt; guidProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Abstractions.ITelemetryClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Int64},System.Collections.Generic.IDictionary{System.String,System.Boolean},System.Collections.Generic.IDictionary{System.String,System.DateTime},System.Collections.Generic.IDictionary{System.String,System.Double},System.Collections.Generic.IDictionary{System.String,System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrackEvent (eventName As String, Optional stringProperties As IDictionary(Of String, String) = Nothing, Optional longProperties As IDictionary(Of String, Long) = Nothing, Optional boolProperties As IDictionary(Of String, Boolean) = Nothing, Optional dateTimeProperties As IDictionary(Of String, DateTime) = Nothing, Optional doubleProperties As IDictionary(Of String, Double) = Nothing, Optional guidProperties As IDictionary(Of String, Guid) = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member TrackEvent : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, int64&gt; * System.Collections.Generic.IDictionary&lt;string, bool&gt; * System.Collections.Generic.IDictionary&lt;string, DateTime&gt; * System.Collections.Generic.IDictionary&lt;string, double&gt; * System.Collections.Generic.IDictionary&lt;string, Guid&gt; -&gt; unit" Usage="iTelemetryClient.TrackEvent (eventName, stringProperties, longProperties, boolProperties, dateTimeProperties, doubleProperties, guidProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Abstractions</AssemblyName>
        <AssemblyVersion>7.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="stringProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="longProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Int64&gt;" />
        <Parameter Name="boolProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Boolean&gt;" />
        <Parameter Name="dateTimeProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.DateTime&gt;" />
        <Parameter Name="doubleProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Double&gt;" />
        <Parameter Name="guidProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="eventName">Name of the event to track. Should be unique per scenario.</param>
        <param name="stringProperties">Key value pair of strings to long with the event.</param>
        <param name="longProperties">Key value pair of longs to long with the event.</param>
        <param name="boolProperties">Key value pair of bools to long with the event.</param>
        <param name="dateTimeProperties">Key value pair of DateTimes to long with the event.</param>
        <param name="doubleProperties">Key value pair of doubles to long with the event.</param>
        <param name="guidProperties">Key value pair of Guids to long with the event.</param>
        <summary>
            Tracks an instance of a named event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
