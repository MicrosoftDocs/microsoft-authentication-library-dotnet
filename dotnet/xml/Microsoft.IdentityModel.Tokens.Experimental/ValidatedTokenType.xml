<Type Name="ValidatedTokenType" FullName="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType">
  <TypeSignature Language="C#" Value="public readonly struct ValidatedTokenType : IEquatable&lt;Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValidatedTokenType extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValidatedTokenType&#xA;Implements IEquatable(Of ValidatedTokenType)" />
  <TypeSignature Language="F#" Value="type ValidatedTokenType = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>8.13.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents a validated token type, including the number of valid types present in the validation parameters.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidatedTokenType (string type, int validTypeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type, int32 validTypeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String, validTypeCount As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType : string * int -&gt; Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" Usage="new Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType (type, validTypeCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="validTypeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">The token type that was validated.</param>
        <param name="validTypeCount">The number of valid types present in the validation parameters.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.Equals(Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValidatedTokenType) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType -&gt; bool" Usage="validatedTokenType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />
      </Parameters>
      <Docs>
        <param name="other">The <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" /> to compare with the current instance.</param>
        <summary>
            Determines whether the specified <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" /> is equal to the current instance.
            </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" /> is equal to the current instance; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="validatedTokenType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current instance.</param>
        <summary>
            Determines whether the specified object is equal to the current instance of <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />.
            </summary>
        <returns>
          <c>true</c> if the specified object is equal to the current instance; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="validatedTokenType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the hash code for this instance of <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />.
            </summary>
        <returns>The hash code for the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType left, Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType left, valuetype Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.op_Equality(Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType,Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValidatedTokenType, right As ValidatedTokenType) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType * Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />
        <Parameter Name="right" Type="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />
      </Parameters>
      <Docs>
        <param name="left">The left value to compare.</param>
        <param name="right">The right value to compare.</param>
        <summary>
            Equality comparison operator for <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />.
            </summary>
        <returns>A boolean indicating whether the left value is equal to the right one.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType left, Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType left, valuetype Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.op_Inequality(Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType,Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValidatedTokenType, right As ValidatedTokenType) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType * Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType -&gt; bool" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />
        <Parameter Name="right" Type="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />
      </Parameters>
      <Docs>
        <param name="left">The left value to compare.</param>
        <param name="right">The right value to compare.</param>
        <summary>
            Inequality comparison operator for <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType" />.
            </summary>
        <returns>A boolean indicating whether the left value is not equal to the right one.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="validatedTokenType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The validated token type's string representation.
            </summary>
        <returns>A string representing the validated token type and the amount of valid types.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The token type that was validated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTypeCount">
      <MemberSignature Language="C#" Value="public int ValidTypeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValidTypeCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.ValidTypeCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidTypeCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ValidTypeCount : int" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType.ValidTypeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of valid types present in the validation parameters.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
