<Type Name="TokenTypeValidationDelegate" FullName="Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationDelegate">
  <TypeSignature Language="C#" Value="public delegate Microsoft.IdentityModel.Tokens.Experimental.ValidationResult&lt;Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType,Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationError&gt; TokenTypeValidationDelegate(string? type, SecurityToken? securityToken, ValidationParameters validationParameters, CallContext callContext);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TokenTypeValidationDelegate extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationDelegate" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TokenTypeValidationDelegate(type As String, securityToken As SecurityToken, validationParameters As ValidationParameters, callContext As CallContext) As ValidationResult(Of ValidatedTokenType, TokenTypeValidationError) " />
  <TypeSignature Language="F#" Value="type TokenTypeValidationDelegate = delegate of string * SecurityToken * ValidationParameters * CallContext -&gt; ValidationResult&lt;ValidatedTokenType, TokenTypeValidationError&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>8.12.0.0</AssemblyVersion>
    <AssemblyVersion>8.12.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="type" Type="System.String" />
    <Parameter Name="securityToken" Type="Microsoft.IdentityModel.Tokens.SecurityToken" />
    <Parameter Name="validationParameters" Type="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" />
    <Parameter Name="callContext" Type="Microsoft.IdentityModel.Tokens.CallContext" />
  </Parameters>
  <ReturnValue>
    <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.ValidationResult&lt;Microsoft.IdentityModel.Tokens.Experimental.ValidatedTokenType,Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationError&gt;</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="type">The token type or <c>null</c> if it couldn't be resolved (e.g from the 'typ' header for a JWT).</param>
    <param name="securityToken">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken" /> that is being validated.</param>
    <param name="validationParameters">
      <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" /> required for validation.</param>
    <param name="callContext">The <see cref="T:Microsoft.IdentityModel.Tokens.CallContext" /> that contains call information.</param>
    <summary>
            Definition for delegate that will validate the token type of a token.
            </summary>
    <returns> A <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationResult`2" />that contains the results of validating the token type.</returns>
    <remarks>An EXACT match is required. <see cref="F:System.StringComparison.Ordinal" /> (case sensitive) is used for comparing <paramref name="type" /> against <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidTypes" />.</remarks>
  </Docs>
</Type>
