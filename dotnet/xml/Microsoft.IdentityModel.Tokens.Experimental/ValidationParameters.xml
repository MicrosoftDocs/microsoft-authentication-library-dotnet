<Type Name="ValidationParameters" FullName="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters">
  <TypeSignature Language="C#" Value="public class ValidationParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationParameters" />
  <TypeSignature Language="F#" Value="type ValidationParameters = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>8.12.0.0</AssemblyVersion>
    <AssemblyVersion>8.12.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains a set of parameters that are used by a <see cref="T:Microsoft.IdentityModel.Tokens.SecurityTokenHandler" /> when validating a <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationParameters (Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.#ctor(Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (other As ValidationParameters)" />
      <MemberSignature Language="F#" Value="new Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters : Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters -&gt; Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" Usage="new Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>
            Copy constructor for <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActorValidationParameters">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters? ActorValidationParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters ActorValidationParameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ActorValidationParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property ActorValidationParameters As ValidationParameters" />
      <MemberSignature Language="F#" Value="member this.ActorValidationParameters : Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ActorValidationParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmValidator">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.AlgorithmValidationDelegate AlgorithmValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.AlgorithmValidationDelegate AlgorithmValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.AlgorithmValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property AlgorithmValidator As AlgorithmValidationDelegate" />
      <MemberSignature Language="F#" Value="member this.AlgorithmValidator : Microsoft.IdentityModel.Tokens.Experimental.AlgorithmValidationDelegate with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.AlgorithmValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.AlgorithmValidationDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows overriding the delegate used to validate the cryptographic algorithm used.
            </summary>
        <value>To be added.</value>
        <remarks>
            If no delegate is set, the default implementation will be used. The default checks the algorithm
            against the <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidAlgorithms" /> property, if present. If not, it will succeed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudienceValidator">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.AudienceValidationDelegate AudienceValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.AudienceValidationDelegate AudienceValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.AudienceValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property AudienceValidator As AudienceValidationDelegate" />
      <MemberSignature Language="F#" Value="member this.AudienceValidator : Microsoft.IdentityModel.Tokens.Experimental.AudienceValidationDelegate with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.AudienceValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.AudienceValidationDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows overriding the delegate that will be used to validate the audience.
            </summary>
        <value>The <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.AudienceValidationDelegate" /> used to validate the issuer of a token</value>
        <remarks>
            If set, this delegate will be responsible for validating the 'audience', instead of default processing.
            This means that no default 'audience' validation will occur.
            </remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the value is set as null.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string? AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the AuthenticationType when creating a <see cref="T:System.Security.Claims.ClaimsIdentity" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If 'value' is null or whitespace.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClockSkew">
      <MemberSignature Language="C#" Value="public TimeSpan ClockSkew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClockSkew" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ClockSkew" />
      <MemberSignature Language="VB.NET" Value="Public Property ClockSkew As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.ClockSkew : TimeSpan with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ClockSkew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(300)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(300)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the clock skew to apply when validating a time.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">If 'value' is less than 0.</exception>
        <c>300</c>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ValidationParameters" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters&#xA;override this.Clone : unit -&gt; Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" Usage="validationParameters.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a new instance of <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" /> with values copied from this object.
            </summary>
        <returns>A new <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters" /> object copied from this object</returns>
        <remarks>This is a shallow Clone.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationManager">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.BaseConfigurationManager? ConfigurationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.BaseConfigurationManager ConfigurationManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ConfigurationManager" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationManager As BaseConfigurationManager" />
      <MemberSignature Language="F#" Value="member this.ConfigurationManager : Microsoft.IdentityModel.Tokens.BaseConfigurationManager with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ConfigurationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.BaseConfigurationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set, this property will be used to obtain the issuer and signing keys associated with the metadata endpoint of <see cref="P:Microsoft.IdentityModel.Tokens.BaseConfiguration.Issuer" />.
            The obtained issuer and signing keys will then be used along with those present on the ValidationParameters for validation of the incoming token.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaimsIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsIdentity CreateClaimsIdentity (Microsoft.IdentityModel.Tokens.SecurityToken securityToken, string issuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity CreateClaimsIdentity(class Microsoft.IdentityModel.Tokens.SecurityToken securityToken, string issuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.CreateClaimsIdentity(Microsoft.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateClaimsIdentity (securityToken As SecurityToken, issuer As String) As ClaimsIdentity" />
      <MemberSignature Language="F#" Value="abstract member CreateClaimsIdentity : Microsoft.IdentityModel.Tokens.SecurityToken * string -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.CreateClaimsIdentity : Microsoft.IdentityModel.Tokens.SecurityToken * string -&gt; System.Security.Claims.ClaimsIdentity" Usage="validationParameters.CreateClaimsIdentity (securityToken, issuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="Microsoft.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="issuer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken">To be added.</param>
        <param name="issuer">To be added.</param>
        <summary>
            Creates a <see cref="T:System.Security.Claims.ClaimsIdentity" /> using:
            <para><see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.AuthenticationType" /></para><para>'NameClaimType': If NameClaimTypeRetriever is set, call delegate, else call NameClaimType. If the result is a null or empty string, use <see cref="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" /></para>.
            <para>'RoleClaimType': If RoleClaimTypeRetriever is set, call delegate, else call RoleClaimType. If the result is a null or empty string, use <see cref="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" /></para>.
            </summary>
        <returns>A <see cref="T:System.Security.Claims.ClaimsIdentity" /> with Authentication, NameClaimType and RoleClaimType set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoProviderFactory">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.CryptoProviderFactory? CryptoProviderFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.CryptoProviderFactory CryptoProviderFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.CryptoProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoProviderFactory As CryptoProviderFactory" />
      <MemberSignature Language="F#" Value="member this.CryptoProviderFactory : Microsoft.IdentityModel.Tokens.CryptoProviderFactory with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.CryptoProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.CryptoProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Users can override the default <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.CryptoProviderFactory" /> with this property. This factory will be used for creating signature providers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugId">
      <MemberSignature Language="C#" Value="public string? DebugId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.DebugId" />
      <MemberSignature Language="VB.NET" Value="Public Property DebugId As String" />
      <MemberSignature Language="F#" Value="member this.DebugId : string with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.DebugId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a string that helps with setting breakpoints when debugging.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAuthenticationType">
      <MemberSignature Language="C#" Value="public const string DefaultAuthenticationType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultAuthenticationType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.DefaultAuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultAuthenticationType As String " />
      <MemberSignature Language="F#" Value="val mutable DefaultAuthenticationType : string" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.DefaultAuthenticationType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This is the default value of <see cref="P:System.Security.Claims.ClaimsIdentity.AuthenticationType" /> when creating a <see cref="T:System.Security.Claims.ClaimsIdentity" />.
            The value is <c>"AuthenticationTypes.Federation"</c>.
            To change the value, set <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.AuthenticationType" /> to a different value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultClockSkew">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultClockSkew;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultClockSkew" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.DefaultClockSkew" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultClockSkew As TimeSpan " />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultClockSkew : TimeSpan" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.DefaultClockSkew" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Default for the clock skew.
            </summary>
        <remarks>300 seconds (5 minutes).</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumTokenSizeInBytes">
      <MemberSignature Language="C#" Value="public const int DefaultMaximumTokenSizeInBytes = 256000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultMaximumTokenSizeInBytes = (256000)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.DefaultMaximumTokenSizeInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultMaximumTokenSizeInBytes As Integer  = 256000" />
      <MemberSignature Language="F#" Value="val mutable DefaultMaximumTokenSizeInBytes : int" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.DefaultMaximumTokenSizeInBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>256000</MemberValue>
      <Docs>
        <summary>
            Default for the maximum token size.
            </summary>
        <remarks>250 KB (kilobytes).</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlashWhenValidatingAudience">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlashWhenValidatingAudience { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlashWhenValidatingAudience" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IgnoreTrailingSlashWhenValidatingAudience" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreTrailingSlashWhenValidatingAudience As Boolean" />
      <MemberSignature Language="F#" Value="member this.IgnoreTrailingSlashWhenValidatingAudience : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IgnoreTrailingSlashWhenValidatingAudience" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a boolean that controls if a '/' is significant at the end of the audience.
            The default is <c>true</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTokenOnFailedValidation">
      <MemberSignature Language="C#" Value="public bool IncludeTokenOnFailedValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTokenOnFailedValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IncludeTokenOnFailedValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTokenOnFailedValidation As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludeTokenOnFailedValidation : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IncludeTokenOnFailedValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the flag that indicates whether to include the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken" /> when the validation fails.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstancePropertyBag">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; InstancePropertyBag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; InstancePropertyBag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.InstancePropertyBag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstancePropertyBag As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.InstancePropertyBag : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.InstancePropertyBag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:System.Collections.Generic.IDictionary`2" /> that is unique to this instance.
            Calling <see cref="M:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.Clone" /> will result in a new instance of this IDictionary.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClone">
      <MemberSignature Language="C#" Value="public bool IsClone { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClone" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IsClone" />
      <MemberSignature Language="VB.NET" Value="Public Property IsClone As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsClone : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IsClone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating if <see cref="M:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.Clone" /> was called to obtain this instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerSigningKeyResolver">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.IssuerSigningKeyResolverDelegate? IssuerSigningKeyResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.IssuerSigningKeyResolverDelegate IssuerSigningKeyResolver" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerSigningKeyResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuerSigningKeyResolver As IssuerSigningKeyResolverDelegate" />
      <MemberSignature Language="F#" Value="member this.IssuerSigningKeyResolver : Microsoft.IdentityModel.Tokens.Experimental.IssuerSigningKeyResolverDelegate with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerSigningKeyResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.IssuerSigningKeyResolverDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a delegate that will be called to retrieve a <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> used for signature validation.
            </summary>
        <value>To be added.</value>
        <remarks>
            This <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> will be used to check the signature. This can be helpful when the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken" /> does not contain a key identifier.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerSigningKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.IdentityModel.Tokens.SecurityKey&gt; IssuerSigningKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.IdentityModel.Tokens.SecurityKey&gt; IssuerSigningKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerSigningKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerSigningKeys As IList(Of SecurityKey)" />
      <MemberSignature Language="F#" Value="member this.IssuerSigningKeys : System.Collections.Generic.IList&lt;Microsoft.IdentityModel.Tokens.SecurityKey&gt;" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerSigningKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Collections.Generic.IList`1" /> used for signature validation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerSigningKeyValidator">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.IssuerSigningKeyValidationDelegate IssuerSigningKeyValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.IssuerSigningKeyValidationDelegate IssuerSigningKeyValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerSigningKeyValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuerSigningKeyValidator As IssuerSigningKeyValidationDelegate" />
      <MemberSignature Language="F#" Value="member this.IssuerSigningKeyValidator : Microsoft.IdentityModel.Tokens.Experimental.IssuerSigningKeyValidationDelegate with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerSigningKeyValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.IssuerSigningKeyValidationDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a delegate for validating the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> that signed the token.
            </summary>
        <value>To be added.</value>
        <remarks>
            If set, this delegate will be called to validate the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> that signed the token, instead of default processing.
            This means that no default <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> validation will occur.
            If both <see cref="T:Microsoft.IdentityModel.Tokens.IssuerSigningKeyValidatorUsingConfiguration" /> and <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerSigningKeyValidator" /> are set, IssuerSigningKeyResolverUsingConfiguration takes
            priority.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerValidatorAsync">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.IssuerValidationDelegateAsync IssuerValidatorAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.IssuerValidationDelegateAsync IssuerValidatorAsync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerValidatorAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuerValidatorAsync As IssuerValidationDelegateAsync" />
      <MemberSignature Language="F#" Value="member this.IssuerValidatorAsync : Microsoft.IdentityModel.Tokens.Experimental.IssuerValidationDelegateAsync with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.IssuerValidatorAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.IssuerValidationDelegateAsync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows overriding the delegate that will be used to validate the issuer of the token.
            </summary>
        <value>The <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.IssuerValidationDelegateAsync" /> used to validate the issuer of a token</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the value is set as null.</exception>
      </Docs>
    </Member>
    <Member MemberName="LifetimeValidator">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.LifetimeValidationDelegate LifetimeValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.LifetimeValidationDelegate LifetimeValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.LifetimeValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property LifetimeValidator As LifetimeValidationDelegate" />
      <MemberSignature Language="F#" Value="member this.LifetimeValidator : Microsoft.IdentityModel.Tokens.Experimental.LifetimeValidationDelegate with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.LifetimeValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.LifetimeValidationDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows overriding the delegate that will be used to validate the lifetime of the token
            </summary>
        <value>The <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.LifetimeValidationDelegate" /> used to validate the lifetime of a token</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the value is set as null.</exception>
      </Docs>
    </Member>
    <Member MemberName="LogTokenId">
      <MemberSignature Language="C#" Value="public bool LogTokenId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogTokenId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.LogTokenId" />
      <MemberSignature Language="VB.NET" Value="Public Property LogTokenId As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogTokenId : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.LogTokenId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a <see cref="T:System.Boolean" /> that will decide if the token identifier claim needs to be logged.
            Default value is <c>true</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameClaimType">
      <MemberSignature Language="C#" Value="public string NameClaimType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameClaimType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.NameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Property NameClaimType As String" />
      <MemberSignature Language="F#" Value="member this.NameClaimType : string with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.NameClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a <see cref="T:System.String" /> that defines the <see cref="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            Controls the value <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> returns. It will return the first <see cref="P:System.Security.Claims.Claim.Value" /> where the <see cref="P:System.Security.Claims.Claim.Type" /> equals <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.NameClaimType" />.
            The default is <see cref="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameClaimTypeRetriever">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.IdentityModel.Tokens.SecurityToken,string,string&gt;? NameClaimTypeRetriever { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;class Microsoft.IdentityModel.Tokens.SecurityToken, string, string&gt; NameClaimTypeRetriever" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.NameClaimTypeRetriever" />
      <MemberSignature Language="VB.NET" Value="Public Property NameClaimTypeRetriever As Func(Of SecurityToken, String, String)" />
      <MemberSignature Language="F#" Value="member this.NameClaimTypeRetriever : Func&lt;Microsoft.IdentityModel.Tokens.SecurityToken, string, string&gt; with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.NameClaimTypeRetriever" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.IdentityModel.Tokens.SecurityToken,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a delegate that will be called to set the property <see cref="P:System.Security.Claims.ClaimsIdentity.NameClaimType" /> after validating a token.
            </summary>
        <value>To be added.</value>
        <remarks>
            The function will be passed:
            <para>The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken" /> that is being validated.</para><para>The issuer associated with the token.</para><para>Returns the value that will set the property <see cref="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyBag">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; PropertyBag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; PropertyBag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.PropertyBag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyBag As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.PropertyBag : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.PropertyBag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains a collection of custom key/value pairs.
            This allows addition of parameters that could be used in custom token validation scenarios.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshBeforeValidation">
      <MemberSignature Language="C#" Value="public bool RefreshBeforeValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RefreshBeforeValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.RefreshBeforeValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshBeforeValidation As Boolean" />
      <MemberSignature Language="F#" Value="member this.RefreshBeforeValidation : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.RefreshBeforeValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A boolean to control whether configuration should be refreshed before validating a token.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default is <c>false</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleClaimType">
      <MemberSignature Language="C#" Value="public string RoleClaimType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleClaimType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.RoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Property RoleClaimType As String" />
      <MemberSignature Language="F#" Value="member this.RoleClaimType : string with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.RoleClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:System.String" /> that defines the <see cref="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>Controls the results of <see cref="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />.</para>
          <para>Each <see cref="T:System.Security.Claims.Claim" /> where <see cref="P:System.Security.Claims.Claim.Type" /> == <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.RoleClaimType" /> will be checked for a match against the 'string' passed to <see cref="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />.</para>
            The default is <see cref="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleClaimTypeRetriever">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.IdentityModel.Tokens.SecurityToken,string,string&gt;? RoleClaimTypeRetriever { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;class Microsoft.IdentityModel.Tokens.SecurityToken, string, string&gt; RoleClaimTypeRetriever" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.RoleClaimTypeRetriever" />
      <MemberSignature Language="VB.NET" Value="Public Property RoleClaimTypeRetriever As Func(Of SecurityToken, String, String)" />
      <MemberSignature Language="F#" Value="member this.RoleClaimTypeRetriever : Func&lt;Microsoft.IdentityModel.Tokens.SecurityToken, string, string&gt; with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.RoleClaimTypeRetriever" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.IdentityModel.Tokens.SecurityToken,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a delegate that will be called to set the property <see cref="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" /> after validating a token.
            </summary>
        <value>To be added.</value>
        <remarks>
            The function will be passed:
            <para>The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken" /> that is being validated.</para><para>The issuer associated with the token.</para><para>Returns the value that will set the property <see cref="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSigninToken">
      <MemberSignature Language="C#" Value="public bool SaveSigninToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSigninToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.SaveSigninToken" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSigninToken As Boolean" />
      <MemberSignature Language="F#" Value="member this.SaveSigninToken : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.SaveSigninToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a boolean to control if the original token should be saved after the security token is validated.
            </summary>
        <value>To be added.</value>
        <remarks>The runtime will consult this value and save the original token that was validated.
            The default is <c>false</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureValidator">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.SignatureValidationDelegate? SignatureValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.SignatureValidationDelegate SignatureValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.SignatureValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureValidator As SignatureValidationDelegate" />
      <MemberSignature Language="F#" Value="member this.SignatureValidator : Microsoft.IdentityModel.Tokens.Experimental.SignatureValidationDelegate with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.SignatureValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.SignatureValidationDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a delegate that will be used to validate the signature of the token.
            </summary>
        <value>To be added.</value>
        <remarks>
            If set, this delegate will be called to validate the signature of the token, instead of default processing.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenDecryptionKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.IdentityModel.Tokens.SecurityKey&gt; TokenDecryptionKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.IdentityModel.Tokens.SecurityKey&gt; TokenDecryptionKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenDecryptionKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenDecryptionKeys As IList(Of SecurityKey)" />
      <MemberSignature Language="F#" Value="member this.TokenDecryptionKeys : System.Collections.Generic.IList&lt;Microsoft.IdentityModel.Tokens.SecurityKey&gt;" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenDecryptionKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Collections.Generic.IList`1" /> that is to be used for decrypting inbound tokens.
            </summary>
        <value>To be added.</value>
        <remarks>
            The decryption keys in this <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenDecryptionKeys" /> collection will only be used if their <see cref="P:Microsoft.IdentityModel.Tokens.SecurityKey.KeyId" /> matches the 'kid' parameter in the token.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenReplayCache">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.ITokenReplayCache? TokenReplayCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.ITokenReplayCache TokenReplayCache" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenReplayCache" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenReplayCache As ITokenReplayCache" />
      <MemberSignature Language="F#" Value="member this.TokenReplayCache : Microsoft.IdentityModel.Tokens.ITokenReplayCache with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenReplayCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.ITokenReplayCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or set the <see cref="T:Microsoft.IdentityModel.Tokens.ITokenReplayCache" /> that store tokens that can be checked to help detect token replay.
            </summary>
        <value>To be added.</value>
        <remarks>If set, then tokens must have an expiration time or the runtime will fault.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenReplayValidator">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.TokenReplayValidationDelegate TokenReplayValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.TokenReplayValidationDelegate TokenReplayValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenReplayValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenReplayValidator As TokenReplayValidationDelegate" />
      <MemberSignature Language="F#" Value="member this.TokenReplayValidator : Microsoft.IdentityModel.Tokens.Experimental.TokenReplayValidationDelegate with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenReplayValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.TokenReplayValidationDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows overriding the delegate that will be used to validate the token replay of the token.
            </summary>
        <value>The <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.TokenReplayValidationDelegate" /> used to validate the token replay of the token.</value>
        <remarks>
            If no delegate is set, the default implementation will be used.
            This means no default token replay validation will occur.
            </remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the value is set as null.</exception>
      </Docs>
    </Member>
    <Member MemberName="TokenTypeValidator">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationDelegate TokenTypeValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationDelegate TokenTypeValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenTypeValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenTypeValidator As TokenTypeValidationDelegate" />
      <MemberSignature Language="F#" Value="member this.TokenTypeValidator : Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationDelegate with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenTypeValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows overriding the delegate that will be used to validate the type of the token.
            If the token type cannot be validated, a <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.ValidationResult`2" /> MUST be returned by the delegate.
            Note: the 'type' parameter may be null if it couldn't be extracted from its usual location.
            Implementations that need to resolve it from a different location can use the 'token' parameter.
            </summary>
        <value>The <see cref="T:Microsoft.IdentityModel.Tokens.Experimental.TokenTypeValidationDelegate" /> used to validate the token type of a token</value>
        <remarks>
            If no delegate is set, the default implementation will be used. The default checks the type
            against the <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidTypes" /> property, if the type is present then, it will succeed.
            </remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the value is set as null.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryAllDecryptionKeys">
      <MemberSignature Language="C#" Value="public bool TryAllDecryptionKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TryAllDecryptionKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TryAllDecryptionKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TryAllDecryptionKeys As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryAllDecryptionKeys : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TryAllDecryptionKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether all <see cref="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TokenDecryptionKeys" /> should be tried during token decryption when a key is not matched to token 'kid' or if token 'kid' is empty.
            The default is <c>true</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAllIssuerSigningKeys">
      <MemberSignature Language="C#" Value="public bool TryAllIssuerSigningKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TryAllIssuerSigningKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TryAllIssuerSigningKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TryAllIssuerSigningKeys As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryAllIssuerSigningKeys : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.TryAllIssuerSigningKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If the IssuerSigningKeyResolver is unable to resolve the key when validating the signature of the SecurityToken,
            all available keys will be tried.
            </summary>
        <value>To be added.</value>
        <remarks>Default is false.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidAlgorithms">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ValidAlgorithms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ValidAlgorithms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidAlgorithms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidAlgorithms As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ValidAlgorithms : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidAlgorithms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the valid algorithms for cryptographic operations.
            </summary>
        <value>To be added.</value>
        <remarks>
            If set to a non-empty collection, only the algorithms listed will be considered valid.
            The default is <c>null</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateActor">
      <MemberSignature Language="C#" Value="public bool ValidateActor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateActor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidateActor" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateActor As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValidateActor : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidateActor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a boolean that controls if the actor claim should be validated.
            </summary>
        <value>To be added.</value>
        <remarks>Default value is false.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithLKG">
      <MemberSignature Language="C#" Value="public bool ValidateWithLKG { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateWithLKG" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidateWithLKG" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateWithLKG As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValidateWithLKG : bool with get, set" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidateWithLKG" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a boolean to control if the LKG configuration will be used for token validation.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default is <c>false</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidAudiences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ValidAudiences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ValidAudiences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidAudiences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidAudiences As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ValidAudiences : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidAudiences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Collections.Generic.IList`1" /> that contains valid audiences that will be used to check against the token's audience.
            The default is an empty collection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidIssuers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ValidIssuers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ValidIssuers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidIssuers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidIssuers As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ValidIssuers : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidIssuers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Collections.Generic.IList`1" /> that contains valid issuers that will be used to check against the token's issuer.
            The default is an empty collection.
            </summary>
        <value>The <see cref="T:System.Collections.Generic.IList`1" /> that contains valid issuers that will be used to check against the token's 'iss' claim.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ValidTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ValidTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidTypes As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ValidTypes : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.IdentityModel.Tokens.Experimental.ValidationParameters.ValidTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.12.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Collections.Generic.IList`1" /> that contains valid types that will be used to check against the JWT header's 'typ' claim.
            If this property is not set, the 'typ' header claim will not be validated and all types will be accepted.
            In the case of a JWE, this property will ONLY apply to the inner token header.
            The default is an empty collection.
            </summary>
        <value>The <see cref="T:System.Collections.Generic.IList`1" /> that contains valid token types that will be used to check against the token's 'typ' claim.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
