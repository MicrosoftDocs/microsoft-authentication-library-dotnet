<Type Name="SymmetricKeyWrapProvider" FullName="Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider">
  <TypeSignature Language="C#" Value="public class SymmetricKeyWrapProvider : Microsoft.IdentityModel.Tokens.KeyWrapProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymmetricKeyWrapProvider extends Microsoft.IdentityModel.Tokens.KeyWrapProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SymmetricKeyWrapProvider&#xA;Inherits KeyWrapProvider" />
  <TypeSignature Language="F#" Value="type SymmetricKeyWrapProvider = class&#xA;    inherit KeyWrapProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>6.27.0.0</AssemblyVersion>
    <AssemblyVersion>6.28.1.0</AssemblyVersion>
    <AssemblyVersion>6.29.0.0</AssemblyVersion>
    <AssemblyVersion>6.30.0.0</AssemblyVersion>
    <AssemblyVersion>6.30.1.0</AssemblyVersion>
    <AssemblyVersion>6.31.0.0</AssemblyVersion>
    <AssemblyVersion>6.32.0.0</AssemblyVersion>
    <AssemblyVersion>6.32.1.0</AssemblyVersion>
    <AssemblyVersion>6.32.2.0</AssemblyVersion>
    <AssemblyVersion>6.32.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.2.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.2.0.0</AssemblyVersion>
    <AssemblyVersion>7.3.1.0</AssemblyVersion>
    <AssemblyVersion>7.4.0.0</AssemblyVersion>
    <AssemblyVersion>7.4.1.0</AssemblyVersion>
    <AssemblyVersion>7.5.0.0</AssemblyVersion>
    <AssemblyVersion>7.5.1.0</AssemblyVersion>
    <AssemblyVersion>7.5.2.0</AssemblyVersion>
    <AssemblyVersion>7.6.0.0</AssemblyVersion>
    <AssemblyVersion>7.6.2.0</AssemblyVersion>
    <AssemblyVersion>7.6.3.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.1.0</AssemblyVersion>
    <AssemblyVersion>8.0.2.0</AssemblyVersion>
    <AssemblyVersion>8.1.0.0</AssemblyVersion>
    <AssemblyVersion>8.1.1.0</AssemblyVersion>
    <AssemblyVersion>8.1.2.0</AssemblyVersion>
    <AssemblyVersion>8.2.0.0</AssemblyVersion>
    <AssemblyVersion>8.2.1.0</AssemblyVersion>
    <AssemblyVersion>8.3.0.0</AssemblyVersion>
    <AssemblyVersion>8.3.1.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.IdentityModel.Tokens.KeyWrapProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides Wrap and Unwrap key services.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricKeyWrapProvider (Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SecurityKey, algorithm As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider : Microsoft.IdentityModel.Tokens.SecurityKey * string -&gt; Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider" Usage="new Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider (key, algorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> that will be used for cryptographic operations.</param>
        <param name="algorithm">The KeyWrap algorithm to be used.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IdentityModel.Tokens.KeyWrapProvider" /> class used for wrapping and unwrapping keys.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="algorithm" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown if the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> cannot be converted to a byte array.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the key size doesn't match the algorithm.</exception>
        <exception cref="T:System.InvalidOperationException">Thrown if failed to create a symmetric algorithm with the provided key and algorithm.</exception>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public override string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.Algorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Algorithm As String" />
      <MemberSignature Language="F#" Value="member this.Algorithm : string" Usage="Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the KeyWrap algorithm that is being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override string Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Context As String" />
      <MemberSignature Language="F#" Value="member this.Context : string with get, set" Usage="Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a user context for a <see cref="T:Microsoft.IdentityModel.Tokens.KeyWrapProvider" />.
            </summary>
        <value>To be added.</value>
        <remarks>This is null by default. This can be used by runtimes or for extensibility scenarios.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="symmetricKeyWrapProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">If true, release both managed and unmanaged resources; otherwise, release only unmanaged resources.</param>
        <summary>
            Releases the resources used by the current instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(class Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.GetSymmetricAlgorithm(Microsoft.IdentityModel.Tokens.SecurityKey,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSymmetricAlgorithm (key As SecurityKey, algorithm As String) As SymmetricAlgorithm" />
      <MemberSignature Language="F#" Value="abstract member GetSymmetricAlgorithm : Microsoft.IdentityModel.Tokens.SecurityKey * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetSymmetricAlgorithm : Microsoft.IdentityModel.Tokens.SecurityKey * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="symmetricKeyWrapProvider.GetSymmetricAlgorithm (key, algorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> that will be used for cryptographic operations.</param>
        <param name="algorithm">The encryption algorithm to be used.</param>
        <summary>
            Returns the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.
            </summary>
        <returns>The initialized <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> cannot be converted to a byte array.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the key size doesn't match the algorithm.</exception>
        <exception cref="T:System.InvalidOperationException">Thrown if failed to create a symmetric algorithm with the provided key and algorithm.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="protected virtual bool IsSupportedAlgorithm (Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSupportedAlgorithm(class Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.IsSupportedAlgorithm(Microsoft.IdentityModel.Tokens.SecurityKey,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsSupportedAlgorithm (key As SecurityKey, algorithm As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedAlgorithm : Microsoft.IdentityModel.Tokens.SecurityKey * string -&gt; bool&#xA;override this.IsSupportedAlgorithm : Microsoft.IdentityModel.Tokens.SecurityKey * string -&gt; bool" Usage="symmetricKeyWrapProvider.IsSupportedAlgorithm (key, algorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> to use for cryptographic operations.</param>
        <param name="algorithm">The algorithm to check for support.</param>
        <summary>
            Determines whether the specified algorithm is supported.
            </summary>
        <returns>
          <see langword="true" /> if the algorithm is supported; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override Microsoft.IdentityModel.Tokens.SecurityKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Tokens.SecurityKey Key" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Key As SecurityKey" />
      <MemberSignature Language="F#" Value="member this.Key : Microsoft.IdentityModel.Tokens.SecurityKey" Usage="Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.IdentityModel.Tokens.SecurityKey" /> that is being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwrapKey">
      <MemberSignature Language="C#" Value="public override byte[] UnwrapKey (byte[] keyBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] UnwrapKey(unsigned int8[] keyBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.UnwrapKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnwrapKey (keyBytes As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="override this.UnwrapKey : byte[] -&gt; byte[]" Usage="symmetricKeyWrapProvider.UnwrapKey keyBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBytes">The bytes to unwrap.</param>
        <summary>
            Unwraps a key using symmetric decryption.
            </summary>
        <returns>The unwrapped key.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="keyBytes" /> is null or has a length of 0.</exception>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="keyBytes" /> is not a multiple of 8.</exception>
        <exception cref="T:System.ObjectDisposedException">Thrown if <see cref="M:Microsoft.IdentityModel.Tokens.KeyWrapProvider.Dispose(System.Boolean)" /> has been called.</exception>
        <exception cref="T:Microsoft.IdentityModel.Tokens.SecurityTokenKeyWrapException">Thrown if the key unwrapping operation fails.</exception>
      </Docs>
    </Member>
    <Member MemberName="WrapKey">
      <MemberSignature Language="C#" Value="public override byte[] WrapKey (byte[] keyBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] WrapKey(unsigned int8[] keyBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider.WrapKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WrapKey (keyBytes As Byte()) As Byte()" />
      <MemberSignature Language="F#" Value="override this.WrapKey : byte[] -&gt; byte[]" Usage="symmetricKeyWrapProvider.WrapKey keyBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBytes">The key to be wrapped.</param>
        <summary>
            Wraps a key using symmetric encryption.
            </summary>
        <returns>The wrapped key.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="keyBytes" /> is null or has a length of 0.</exception>
        <exception cref="T:System.ArgumentException">Thrown if <paramref name="keyBytes" /> is not a multiple of 8.</exception>
        <exception cref="T:System.ObjectDisposedException">Thrown if <see cref="M:Microsoft.IdentityModel.Tokens.KeyWrapProvider.Dispose(System.Boolean)" /> has been called.</exception>
        <exception cref="T:Microsoft.IdentityModel.Tokens.SecurityTokenKeyWrapException">Thrown if the key wrapping operation fails.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
