<Type Name="TryReadJwtClaim" FullName="Microsoft.IdentityModel.Tokens.TryReadJwtClaim">
  <TypeSignature Language="C#" Value="public delegate bool TryReadJwtClaim(ref Utf8JsonReader reader, JwtSegmentType jwtSegmentType, string claimName, out object claimValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TryReadJwtClaim extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.TryReadJwtClaim" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TryReadJwtClaim(ByRef reader As Utf8JsonReader, jwtSegmentType As JwtSegmentType, claimName As String, ByRef claimValue As Object) As Boolean " />
  <TypeSignature Language="F#" Value="type TryReadJwtClaim = delegate of Utf8JsonReader * JwtSegmentType * string * obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>8.9.0.0</AssemblyVersion>
    <AssemblyVersion>8.10.0.0</AssemblyVersion>
    <AssemblyVersion>8.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
    <Parameter Name="jwtSegmentType" Type="Microsoft.IdentityModel.Tokens.JwtSegmentType" />
    <Parameter Name="claimName" Type="System.String" />
    <Parameter Name="claimValue" Type="System.Object" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="reader">Reader for the underlying token bytes.</param>
    <param name="jwtSegmentType">Specifies whether the claim is from the JWT header or payload.</param>
    <param name="claimName">The claim name for this claim value.</param>
    <param name="claimValue">The claim value that was read and parsed from the reader.</param>
    <summary>
            When JSON Web Token header or payload is being read claim by claim,
            this delegate is called after all claims known to the library have been processed.
            When called, the reader is positioned at the claim value.
            </summary>
    <returns>True, if the claim value was read successfully; false otherwise.</returns>
    <remarks>
            An example implementation:
            <code>
            bool TryReadJwtClaim(ref Utf8JsonReader reader, JwtSegmentType jwtSegmentType, string claimName, out object claimValue)
            {
                if (jwtSegmentType == JwtSegmentType.Payload &amp;&amp; claimName == "CustomClaimName")
                    claimValue = JsonSerializer.Deserialize&lt;CustomClaim&gt;(reader.GetString());
                    return true;
                return false;
            }
            </code></remarks>
  </Docs>
</Type>
