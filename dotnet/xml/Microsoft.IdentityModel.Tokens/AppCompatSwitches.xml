<Type Name="AppCompatSwitches" FullName="Microsoft.IdentityModel.Tokens.AppCompatSwitches">
  <TypeSignature Language="C#" Value="public static class AppCompatSwitches" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AppCompatSwitches extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.AppCompatSwitches" />
  <TypeSignature Language="VB.NET" Value="Public Class AppCompatSwitches" />
  <TypeSignature Language="F#" Value="type AppCompatSwitches = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>8.0.1.0</AssemblyVersion>
    <AssemblyVersion>8.0.2.0</AssemblyVersion>
    <AssemblyVersion>8.1.0.0</AssemblyVersion>
    <AssemblyVersion>8.1.1.0</AssemblyVersion>
    <AssemblyVersion>8.1.2.0</AssemblyVersion>
    <AssemblyVersion>8.2.0.0</AssemblyVersion>
    <AssemblyVersion>8.2.1.0</AssemblyVersion>
    <AssemblyVersion>8.3.0.0</AssemblyVersion>
    <AssemblyVersion>8.3.1.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
    <AssemblyVersion>8.5.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.0.0</AssemblyVersion>
    <AssemblyVersion>8.6.1.0</AssemblyVersion>
    <AssemblyVersion>8.7.0.0</AssemblyVersion>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
    <AssemblyVersion>8.9.0.0</AssemblyVersion>
    <AssemblyVersion>8.10.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Identifiers used for switching between different app compat behaviors within the Microsoft.IdentityModel libraries.
            </summary>
    <remarks>
            Use <see cref="T:Microsoft.IdentityModel.Tokens.AppContextSwitches" /> instead.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="UseRfcDefinitionOfEpkAndKid">
      <MemberSignature Language="C#" Value="public const string UseRfcDefinitionOfEpkAndKid;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UseRfcDefinitionOfEpkAndKid" />
      <MemberSignature Language="DocId" Value="F:Microsoft.IdentityModel.Tokens.AppCompatSwitches.UseRfcDefinitionOfEpkAndKid" />
      <MemberSignature Language="VB.NET" Value="Public Const UseRfcDefinitionOfEpkAndKid As String " />
      <MemberSignature Language="F#" Value="val mutable UseRfcDefinitionOfEpkAndKid : string" Usage="Microsoft.IdentityModel.Tokens.AppCompatSwitches.UseRfcDefinitionOfEpkAndKid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Uses <see cref="P:Microsoft.IdentityModel.Tokens.EncryptingCredentials.KeyExchangePublicKey" /> for the token's `kid` header parameter. When using
            ECDH-based key wrap algorithms the public key portion of <see cref="P:Microsoft.IdentityModel.Tokens.EncryptingCredentials.Key" /> is also written
            to the token's `epk` header parameter.
            </summary>
        <remarks>
            Enabling this switch improves the library's conformance to RFC 7518 with regards to how the header values for
            `kid` and `epk` are set in ECDH key wrap scenarios. The previous behavior erroneously used key ID of
            <see cref="P:Microsoft.IdentityModel.Tokens.EncryptingCredentials.Key" /> as the `kid` parameter, and did not automatically set `epk` as the spec
            defines. This switch enables the intended behavior where <see cref="P:Microsoft.IdentityModel.Tokens.EncryptingCredentials.KeyExchangePublicKey" />
            is used for `kid` and the public portion of <see cref="P:Microsoft.IdentityModel.Tokens.EncryptingCredentials.Key" /> is used for `epk`.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
