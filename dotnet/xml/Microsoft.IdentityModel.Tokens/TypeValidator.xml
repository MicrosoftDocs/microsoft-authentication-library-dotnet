<Type Name="TypeValidator" FullName="Microsoft.IdentityModel.Tokens.TypeValidator">
  <TypeSignature Language="C#" Value="public delegate string TypeValidator(string type, SecurityToken securityToken, TokenValidationParameters validationParameters);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TypeValidator extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.TypeValidator" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TypeValidator(type As String, securityToken As SecurityToken, validationParameters As TokenValidationParameters) As String " />
  <TypeSignature Language="F#" Value="type TypeValidator = delegate of string * SecurityToken * TokenValidationParameters -&gt; string" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>8.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="type" Type="System.String" />
    <Parameter Name="securityToken" Type="Microsoft.IdentityModel.Tokens.SecurityToken" />
    <Parameter Name="validationParameters" Type="Microsoft.IdentityModel.Tokens.TokenValidationParameters" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.String</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="type">The token type to be validated.</param>
    <param name="securityToken">The <see cref="T:Microsoft.IdentityModel.Tokens.SecurityToken" /> being validated.</param>
    <param name="validationParameters">The <see cref="T:Microsoft.IdentityModel.Tokens.TokenValidationParameters" /> to be used for validating the token.</param>
    <summary>
            Validates the type of the security token.
            </summary>
    <returns>The actual token type, which may be the same as <paramref name="type" /> or a different value if the token type was resolved from a different location.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
