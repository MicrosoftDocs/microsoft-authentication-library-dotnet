<Type Name="Base64UrlEncoder" FullName="Microsoft.IdentityModel.Tokens.Base64UrlEncoder">
  <TypeSignature Language="C#" Value="public static class Base64UrlEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64UrlEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Tokens.Base64UrlEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64UrlEncoder" />
  <TypeSignature Language="F#" Value="type Base64UrlEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
    <AssemblyVersion>6.27.0.0</AssemblyVersion>
    <AssemblyVersion>6.28.1.0</AssemblyVersion>
    <AssemblyVersion>6.29.0.0</AssemblyVersion>
    <AssemblyVersion>6.30.0.0</AssemblyVersion>
    <AssemblyVersion>6.30.1.0</AssemblyVersion>
    <AssemblyVersion>6.31.0.0</AssemblyVersion>
    <AssemblyVersion>6.32.0.0</AssemblyVersion>
    <AssemblyVersion>6.32.1.0</AssemblyVersion>
    <AssemblyVersion>6.32.2.0</AssemblyVersion>
    <AssemblyVersion>6.32.3.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.2.0</AssemblyVersion>
    <AssemblyVersion>7.0.3.0</AssemblyVersion>
    <AssemblyVersion>7.2.0.0</AssemblyVersion>
    <AssemblyVersion>7.3.1.0</AssemblyVersion>
    <AssemblyVersion>7.4.0.0</AssemblyVersion>
    <AssemblyVersion>7.4.1.0</AssemblyVersion>
    <AssemblyVersion>7.5.0.0</AssemblyVersion>
    <AssemblyVersion>7.5.1.0</AssemblyVersion>
    <AssemblyVersion>7.5.2.0</AssemblyVersion>
    <AssemblyVersion>7.6.0.0</AssemblyVersion>
    <AssemblyVersion>7.6.2.0</AssemblyVersion>
    <AssemblyVersion>7.6.3.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.1.0</AssemblyVersion>
    <AssemblyVersion>8.0.2.0</AssemblyVersion>
    <AssemblyVersion>8.1.0.0</AssemblyVersion>
    <AssemblyVersion>8.1.1.0</AssemblyVersion>
    <AssemblyVersion>8.1.2.0</AssemblyVersion>
    <AssemblyVersion>8.2.0.0</AssemblyVersion>
    <AssemblyVersion>8.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Encodes and Decodes strings as base64url encoding.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static string Decode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Decode(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Decode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (arg As String) As String" />
      <MemberSignature Language="F#" Value="static member Decode : string -&gt; string" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Decode arg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">The base64url encoded string to decode.</param>
        <summary>
            Decodes the specified base64url encoded string to UTF-8.
            </summary>
        <returns>The UTF-8 decoded string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBytes">
      <MemberSignature Language="C#" Value="public static byte[] DecodeBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecodeBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.DecodeBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeBytes (str As String) As Byte()" />
      <MemberSignature Language="F#" Value="static member DecodeBytes : string -&gt; byte[]" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.DecodeBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The base64url encoded string.</param>
        <summary>
            Converts the specified base64url encoded string to UTF-8 bytes.
            </summary>
        <returns>The UTF-8 bytes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] inArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] inArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (inArray As Byte()) As String" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] -&gt; string" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode inArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inArray">An array of 8-bit unsigned integers.</param>
        <summary>
            Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation encoded with base64url digits.
            </summary>
        <returns>The base64url encoded string representation of the elements in inArray.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if inArray is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown if offset or length is negative, or if offset plus length is greater than the length of inArray.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (arg As String) As String" />
      <MemberSignature Language="F#" Value="static member Encode : string -&gt; string" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode arg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">The string to encode.</param>
        <summary>
            Performs base64url encoding, which differs from regular base64 encoding as follows:
            * Padding is skipped so the pad character '=' doesn't have to be percent encoded.
            * The 62nd and 63rd regular base64 encoding characters ('+' and '/') are replaced with ('-' and '_').
            This makes the encoding alphabet URL safe.
            </summary>
        <returns>The base64url encoding of the UTF8 bytes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static int Encode (ReadOnlySpan&lt;byte&gt; inArray, Span&lt;char&gt; output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Encode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; inArray, valuetype System.Span`1&lt;char&gt; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (inArray As ReadOnlySpan(Of Byte), output As Span(Of Char)) As Integer" />
      <MemberSignature Language="F#" Value="static member Encode : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode (inArray, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="output" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="inArray">A read-only span of bytes to encode.</param>
        <param name="output">The span of characters to write the encoded output.</param>
        <summary>
            Populates a <see cref="T:System.Span`1" /> with the base64url encoded representation of a <see cref="T:System.ReadOnlySpan`1" /> of bytes.
            </summary>
        <returns>The number of characters written to the output span.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] inArray, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] inArray, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (inArray As Byte(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * int * int -&gt; string" Usage="Microsoft.IdentityModel.Tokens.Base64UrlEncoder.Encode (inArray, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Tokens</AssemblyName>
        <AssemblyVersion>8.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inArray" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inArray">An array of 8-bit unsigned integers.</param>
        <param name="offset">An offset in inArray.</param>
        <param name="length">The number of elements of inArray to convert.</param>
        <summary>
            Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation encoded with base64url digits.
            Parameters specify the subset as an offset in the input array and the number of elements in the array to convert.
            </summary>
        <returns>The base64url encoded string representation of length elements of inArray, starting at position offset.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if inArray is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown if offset or length is negative, or if offset plus length is greater than the length of inArray.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
