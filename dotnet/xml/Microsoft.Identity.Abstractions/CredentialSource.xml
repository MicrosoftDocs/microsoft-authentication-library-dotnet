<Type Name="CredentialSource" FullName="Microsoft.Identity.Abstractions.CredentialSource">
  <TypeSignature Language="C#" Value="public enum CredentialSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CredentialSource extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Abstractions.CredentialSource" />
  <TypeSignature Language="VB.NET" Value="Public Enum CredentialSource" />
  <TypeSignature Language="F#" Value="type CredentialSource = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Source for a credential.
            Credentials are used to prove the identity of the
            application (See <see cref="P:Microsoft.Identity.Abstractions.IdentityApplicationOptions.ClientCredentials" />), or
            to decrypt tokens (See <see cref="P:Microsoft.Identity.Abstractions.IdentityApplicationOptions.TokenDecryptionCredentials" />). Credentials can be
            secrets (client secrets), certificates, or signed assertions. They can be stored or provided in a variety of ways, 
            and this enumeration describes these ways. It's used in the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoDecryptKeys">
      <MemberSignature Language="C#" Value="AutoDecryptKeys" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource AutoDecryptKeys = int32(10)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.AutoDecryptKeys" />
      <MemberSignature Language="VB.NET" Value="AutoDecryptKeys" />
      <MemberSignature Language="F#" Value="AutoDecryptKeys = 10" Usage="Microsoft.Identity.Abstractions.CredentialSource.AutoDecryptKeys" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>
            Use this value for automatic decrypt keys used by a web API to decrypt an encrypted token. When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value,
            also use the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.DecryptKeysAuthenticationOptions" /> to provide the tenant used by the web API to get a token to get the decrypt keys. This value
            only applies to <see cref="P:Microsoft.Identity.Abstractions.IdentityApplicationOptions.TokenDecryptionCredentials" />, but the client credentials are used to get the token 
            to acquire the decrypt keys.
            </summary>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a decrypt credential to get the decrypt keys automatically:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="autodecryp_json":::
            
            The code below describes the same, programmatically in C#.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="autodecryp_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Base64Encoded">
      <MemberSignature Language="C#" Value="Base64Encoded" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource Base64Encoded = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.Base64Encoded" />
      <MemberSignature Language="VB.NET" Value="Base64Encoded" />
      <MemberSignature Language="F#" Value="Base64Encoded = 2" Usage="Microsoft.Identity.Abstractions.CredentialSource.Base64Encoded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            Use this value when you provide a Base64 encoded string. When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value,
            you'll also provide the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.Base64EncodedValue" /> property and optionally, the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificatePassword" />.
            </summary>
        <remarks>Using the base64 encoded representation of a certificate is not recommended in production.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a certificate by its base64 encoded value, to be used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="base64_json":::
            
            The code below describes programmatically in C#, the same certificate.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="base64_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="Certificate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource Certificate = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.Certificate" />
      <MemberSignature Language="VB.NET" Value="Certificate" />
      <MemberSignature Language="F#" Value="Certificate = 0" Usage="Microsoft.Identity.Abstractions.CredentialSource.Certificate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            Use this value if you provide a certificate yourself. When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value,
            you will also provide the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.Certificate" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="ClientSecret">
      <MemberSignature Language="C#" Value="ClientSecret" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource ClientSecret = int32(6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.ClientSecret" />
      <MemberSignature Language="VB.NET" Value="ClientSecret" />
      <MemberSignature Language="F#" Value="ClientSecret = 6" Usage="Microsoft.Identity.Abstractions.CredentialSource.ClientSecret" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
            Use this value when you provide a client secret.
            When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value, you'll also provide the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.ClientSecret" />.
            </summary>
        <remarks>Using a client secret is not recommended in production.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a client secret used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="secret_json":::
            
            The code below describes programmatically in C#, the same client secret.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="secret_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CustomSignedAssertion">
      <MemberSignature Language="C#" Value="CustomSignedAssertion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource CustomSignedAssertion = int32(11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.CustomSignedAssertion" />
      <MemberSignature Language="VB.NET" Value="CustomSignedAssertion" />
      <MemberSignature Language="F#" Value="CustomSignedAssertion = 11" Usage="Microsoft.Identity.Abstractions.CredentialSource.CustomSignedAssertion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
            Use this value in order to utilize a credential provider that is not part of the Microsoft.Identity.Abstractions library.
            This is an extension point, which goes along with <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CustomSignedAssertionProviderName" /></summary>
      </Docs>
    </Member>
    <Member MemberName="KeyVault">
      <MemberSignature Language="C#" Value="KeyVault" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource KeyVault = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />
      <MemberSignature Language="VB.NET" Value="KeyVault" />
      <MemberSignature Language="F#" Value="KeyVault = 1" Usage="Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Use this value when the certificate is stored in Azure Key Vault. When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value,
            you'll also provide the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultUrl" /> and <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultCertificateName" />
            properties.
            </summary>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a certificate stored in Key Vault used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="keyvault_json":::
            
            The code below describes programmatically in C#, the same certificate stored in Key Vault.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="keyvault_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="Path" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource Path = int32(3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.Path" />
      <MemberSignature Language="VB.NET" Value="Path" />
      <MemberSignature Language="F#" Value="Path = 3" Usage="Microsoft.Identity.Abstractions.CredentialSource.Path" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
            Use this value when you provide a path to a file containing the certificate on disk. When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value,
            you'll also provide the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDiskPath" /> property, and optionally, the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificatePassword" /></summary>
        <remarks>Using a certificate from a local path is not recommended in production.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a certificate retrieved by its path and a password to be used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="path_json":::
            
            The code below describes programmatically in C#, a the same certificate.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="path_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SignedAssertionFilePath">
      <MemberSignature Language="C#" Value="SignedAssertionFilePath" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource SignedAssertionFilePath = int32(8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFilePath" />
      <MemberSignature Language="VB.NET" Value="SignedAssertionFilePath" />
      <MemberSignature Language="F#" Value="SignedAssertionFilePath = 8" Usage="Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFilePath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
            Use this value for a Certificateless client credentials using workload identity federation with Azure Kubernetes Services (AKS).
            When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value, you can also optionally provide a path containing the signed assertion.
            If you don't the credential will be searched in files contained in the following environment variables: <b>AZURE_FEDERATED_TOKEN_FILE</b> and <b>AZURE_ACCESS_TOKEN_FILE</b>.
            </summary>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a signed assertion acquired with workload identity federation with Azure Kubernetes Services (AKS):
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="aks_json":::
            
            The code below describes programmatically in C#, the same workload identity federation with with Azure Kubernetes Services (AKS) signed assertion.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="aks_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SignedAssertionFromManagedIdentity">
      <MemberSignature Language="C#" Value="SignedAssertionFromManagedIdentity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource SignedAssertionFromManagedIdentity = int32(7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFromManagedIdentity" />
      <MemberSignature Language="VB.NET" Value="SignedAssertionFromManagedIdentity" />
      <MemberSignature Language="F#" Value="SignedAssertionFromManagedIdentity = 7" Usage="Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFromManagedIdentity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
            Use this value for a Certificateless client credentials using workload identity federation with managed identity.
            When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value, you can also provide a user assigned managed identity using the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.ManagedIdentityClientId" />.
            If you don't the client credential will be based on the system assigned managed identity.
            </summary>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a workload identity federation with a user assigned managed identity:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="msi_json":::
            
            The code below describes programmatically in C#, the same workload identity federation with a user assigned managed identity.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="msi_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SignedAssertionFromVault">
      <MemberSignature Language="C#" Value="SignedAssertionFromVault" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource SignedAssertionFromVault = int32(9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFromVault" />
      <MemberSignature Language="VB.NET" Value="SignedAssertionFromVault" />
      <MemberSignature Language="F#" Value="SignedAssertionFromVault = 9" Usage="Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFromVault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
            Use this value for a certificateless client credentials generated from another vault.
            When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value, you can also optionally provide the name of a certificate used to compute
            the signed assertion using the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultCertificateName" /> property.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="StoreWithDistinguishedName">
      <MemberSignature Language="C#" Value="StoreWithDistinguishedName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource StoreWithDistinguishedName = int32(5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" />
      <MemberSignature Language="VB.NET" Value="StoreWithDistinguishedName" />
      <MemberSignature Language="F#" Value="StoreWithDistinguishedName = 5" Usage="Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
            Use this value when you provide a certificate from the certificate store, described by its distinguished name.
            When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value, you'll also provide the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDistinguishedName" />
            and <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" /> properties.
            </summary>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a user certificate stored in the personal certificates folder (<b>CurrentUser/My</b>) and specified by its distinguised name, used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="distinguishedname_json":::
            
            The code below describes programmatically in C#, a computer certificate in the personal certificates folder (<b>LocalMachine/My<b>).
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="distinguishedname_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="StoreWithThumbprint">
      <MemberSignature Language="C#" Value="StoreWithThumbprint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Identity.Abstractions.CredentialSource StoreWithThumbprint = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" />
      <MemberSignature Language="VB.NET" Value="StoreWithThumbprint" />
      <MemberSignature Language="F#" Value="StoreWithThumbprint = 4" Usage="Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
            Use this value when you provide a certificate from the certificate store, described by its thumbprint.
            When setting the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> property to this value, you'll also provide the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateThumbprint" />
            and <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" /> properties.
            </summary>
        <example>
          <format type="text/markdown"><![CDATA[
            The Json fragment below describes a user certificate stored in the personal certificates folder (<b>CurrentUser/My</b>) and specified by its thumbprint, used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="thumbprint_json":::
            
            The code below describes programmatically in C#, a computer certificate in the personal certificates folder (<b>LocalMachine/My<b>) accessed by its thumbprint.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="thumbprint_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
