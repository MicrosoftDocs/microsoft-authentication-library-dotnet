<Type Name="AcquireTokenResult" FullName="Microsoft.Identity.Abstractions.AcquireTokenResult">
  <TypeSignature Language="C#" Value="public class AcquireTokenResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AcquireTokenResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Abstractions.AcquireTokenResult" />
  <TypeSignature Language="VB.NET" Value="Public Class AcquireTokenResult" />
  <TypeSignature Language="F#" Value="type AcquireTokenResult = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.3.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.2.0.0</AssemblyVersion>
    <AssemblyVersion>7.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Result of a token acquisition.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AcquireTokenResult (string accessToken, DateTimeOffset expiresOn, string tenantId, string idToken, System.Collections.Generic.IEnumerable&lt;string&gt; scopes, Guid correlationId, string tokenType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string accessToken, valuetype System.DateTimeOffset expiresOn, string tenantId, string idToken, class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, valuetype System.Guid correlationId, string tokenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Abstractions.AcquireTokenResult.#ctor(System.String,System.DateTimeOffset,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (accessToken As String, expiresOn As DateTimeOffset, tenantId As String, idToken As String, scopes As IEnumerable(Of String), correlationId As Guid, tokenType As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Identity.Abstractions.AcquireTokenResult : string * DateTimeOffset * string * string * seq&lt;string&gt; * Guid * string -&gt; Microsoft.Identity.Abstractions.AcquireTokenResult" Usage="new Microsoft.Identity.Abstractions.AcquireTokenResult (accessToken, expiresOn, tenantId, idToken, scopes, correlationId, tokenType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="accessToken" Type="System.String" />
        <Parameter Name="expiresOn" Type="System.DateTimeOffset" />
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="idToken" Type="System.String" />
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="correlationId" Type="System.Guid" />
        <Parameter Name="tokenType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="accessToken">Access token.</param>
        <param name="expiresOn">Expiration date/time.</param>
        <param name="tenantId">Tenant for which the token was acquired.</param>
        <param name="idToken">ID Token, in the case of a token for a user.</param>
        <param name="scopes">Scopes granted by the IdP.</param>
        <param name="correlationId">Correlation ID of the token acquisition.</param>
        <param name="tokenType">Token type of the access token (Bearer or Pop).</param>
        <summary>
            Constructor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string? AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.AcquireTokenResult.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="Microsoft.Identity.Abstractions.AcquireTokenResult.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Access Token that can be used to build an authorization header 
            to access protected web APIs. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.Identity.Abstractions.IAuthorizationHeaderProvider" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public Guid CorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid CorrelationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.AcquireTokenResult.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrelationId As Guid" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : Guid with get, set" Usage="Microsoft.Identity.Abstractions.AcquireTokenResult.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the correlation id used for the request. If provided in <see cref="P:Microsoft.Identity.Abstractions.AcquireTokenOptions.CorrelationId" />, this
            will be the same, otherwise a new one will be created by the token acquirer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresOn">
      <MemberSignature Language="C#" Value="public DateTimeOffset ExpiresOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset ExpiresOn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.AcquireTokenResult.ExpiresOn" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpiresOn As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.ExpiresOn : DateTimeOffset with get, set" Usage="Microsoft.Identity.Abstractions.AcquireTokenResult.ExpiresOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the point in time in which the Access Token returned in the <see cref="P:Microsoft.Identity.Abstractions.AcquireTokenResult.AccessToken" />
            property ceases to be valid. This value is calculated based on current UTC time
            measured locally and the value expiresIn received from the service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdToken">
      <MemberSignature Language="C#" Value="public string? IdToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IdToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.AcquireTokenResult.IdToken" />
      <MemberSignature Language="VB.NET" Value="Public Property IdToken As String" />
      <MemberSignature Language="F#" Value="member this.IdToken : string with get, set" Usage="Microsoft.Identity.Abstractions.AcquireTokenResult.IdToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Id Token if returned by the service or null if no Id Token is returned.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scopes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt;? Scopes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; Scopes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.AcquireTokenResult.Scopes" />
      <MemberSignature Language="VB.NET" Value="Public Property Scopes As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.Scopes : seq&lt;string&gt; with get, set" Usage="Microsoft.Identity.Abstractions.AcquireTokenResult.Scopes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the scope values effectively granted by the IdP. They can be different
            form the scopes requested.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TenantId">
      <MemberSignature Language="C#" Value="public string? TenantId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TenantId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.AcquireTokenResult.TenantId" />
      <MemberSignature Language="VB.NET" Value="Public Property TenantId As String" />
      <MemberSignature Language="F#" Value="member this.TenantId : string with get, set" Usage="Microsoft.Identity.Abstractions.AcquireTokenResult.TenantId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             (Microsoft Identity specific) In the case of Azure AD, Azure AD B2C, or Microsoft Entra External IDs, 
             gets an identifier for the tenant for which the token was acquired.
             This property will be null if tenant information is not returned by the service or the service
             is not Azure AD.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public string? TokenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TokenType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.AcquireTokenResult.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenType As String" />
      <MemberSignature Language="F#" Value="member this.TokenType : string with get, set" Usage="Microsoft.Identity.Abstractions.AcquireTokenResult.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the protocol (Bearer or Pop).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
