<Type Name="CredentialDescription" FullName="Microsoft.Identity.Abstractions.CredentialDescription">
  <TypeSignature Language="C#" Value="public class CredentialDescription" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialDescription extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Abstractions.CredentialDescription" />
  <TypeSignature Language="VB.NET" Value="Public Class CredentialDescription" />
  <TypeSignature Language="F#" Value="type CredentialDescription = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.3.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Description of a credential. Credentials are used to prove the identity of the
            application (See <see cref="P:Microsoft.Identity.Abstractions.IdentityApplicationOptions.ClientCredentials" />), or
            to decrypt tokens (See <see cref="P:Microsoft.Identity.Abstractions.IdentityApplicationOptions.TokenDecryptionCredentials" />). Credentials can be
            secrets (client secrets), certificates, or signed assertions. They can be stored or provided in a variety of ways, 
            and this class provides a way to describe them. The description is then used by Microsoft.Identity.Web to retrieve the credential.
            (See the DefaultCredentialProvider class)
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Abstractions.CredentialDescription.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Base64EncodedValue">
      <MemberSignature Language="C#" Value="public string? Base64EncodedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Base64EncodedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.Base64EncodedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property Base64EncodedValue As String" />
      <MemberSignature Language="F#" Value="member this.Base64EncodedValue : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.Base64EncodedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Base64Encoded" />, specifies the base64 encoded value of the certificate.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a certificate by its base64 encoded value, to be used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="base64_json":::
            
            The code below describes programmatically in C#, the same certificate.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="base64_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CachedValue">
      <MemberSignature Language="C#" Value="public virtual object? CachedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CachedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.CachedValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachedValue As Object" />
      <MemberSignature Language="F#" Value="member this.CachedValue : obj with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.CachedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When the credential is retrieved by a <see cref="T:Microsoft.Identity.Abstractions.ICredentialsLoader" />, it will be stored in this property, where you can retrieve it. If the credential is a certificate,
            it will also be stored in the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.Certificate" /> property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2? Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As X509Certificate2" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Certificate" />, you will use this property to provide the certificate yourself. 
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Base64Encoded" /> or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />
            or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Path" /> or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" /> or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" />
            after the certificate is retrieved by a <see cref="T:Microsoft.Identity.Abstractions.ICredentialsLoader" />, it will be stored in this property and also in the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CachedValue" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateDiskPath">
      <MemberSignature Language="C#" Value="public string? CertificateDiskPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificateDiskPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDiskPath" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateDiskPath As String" />
      <MemberSignature Language="F#" Value="member this.CertificateDiskPath : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.CertificateDiskPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Path" />, specifies the path to the certificate on disk. You can
            use this property to specify the path to a PFX file containing the certificate and its private key. If a password is needed, 
            use <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificatePassword" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a certificate retrieved by its path and a password to be used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="path_json":::
            
            The code below describes programmatically in C#, a the same certificate.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="path_csharp":::
            ]]></format>
        </example>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificatePassword" />
      </Docs>
    </Member>
    <Member MemberName="CertificateDistinguishedName">
      <MemberSignature Language="C#" Value="public string? CertificateDistinguishedName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificateDistinguishedName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDistinguishedName" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateDistinguishedName As String" />
      <MemberSignature Language="F#" Value="member this.CertificateDistinguishedName : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.CertificateDistinguishedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" />, specifies the distinguished name of
            the certificate in the store specified by <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" />
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateThumbprint" />
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a user certificate stored in the personal certificates folder (<b>CurrentUser/My</b>) and specified by its distinguised name, used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="distinguishedname_json":::
            
            The code below describes programmatically in C#, a computer certificate in the personal certificates folder (<b>LocalMachine/My<b>).
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="distinguishedname_csharp":::
            ]]></format>
        </example>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />
      </Docs>
    </Member>
    <Member MemberName="CertificatePassword">
      <MemberSignature Language="C#" Value="public string? CertificatePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificatePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificatePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificatePassword As String" />
      <MemberSignature Language="F#" Value="member this.CertificatePassword : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.CertificatePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Path" />, specifies the password to use to access the certificate which
            path is specified by <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDiskPath" />. Only use this property if the certificate is protected by a password.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a certificate retrieved by its path and a password to be used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="path_json":::
            
            The code below describes programmatically in C#, the same certificate.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="path_csharp":::
            ]]></format>
        </example>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDiskPath" />
      </Docs>
    </Member>
    <Member MemberName="CertificateStorePath">
      <MemberSignature Language="C#" Value="public string? CertificateStorePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificateStorePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateStorePath As String" />
      <MemberSignature Language="F#" Value="member this.CertificateStorePath : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" /> or 
            <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" />, specifies the certificate store from which to extract
            the certificate. The format is the concatenation of a value of <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> and a value of <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />
            separated by a slash. For instance, use <c>CurrentUser/My</c> for a user certificate, and <c>LocalMachine/My</c> for a computer certificate.
            </summary>
        <value>To be added.</value>
        <remarks>Use this property in conjunction with <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDistinguishedName" /> or <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateThumbprint" />.</remarks>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" />
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDistinguishedName" />
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateThumbprint" />
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />
      </Docs>
    </Member>
    <Member MemberName="CertificateThumbprint">
      <MemberSignature Language="C#" Value="public string? CertificateThumbprint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificateThumbprint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateThumbprint" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateThumbprint As String" />
      <MemberSignature Language="F#" Value="member this.CertificateThumbprint : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.CertificateThumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" /> specifies the thumbprint of the certificate to extract from
            the certificate store specified by <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" />.
            </summary>
        <value>To be added.</value>
        <remarks>Use this property in conjunction with <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" />.</remarks>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateDistinguishedName" />
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.CertificateStorePath" />
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a user certificate stored in the personal certificates folder (<b>CurrentUser/My</b>) and specified by its thumbprint, used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="thumbprint_json":::
            
            The code below describes programmatically in C#, a computer certificate in the personal certificates folder (<b>LocalMachine/My<b>) accessed by its thumbprint.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="thumbprint_csharp":::
            ]]></format>
        </example>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />
      </Docs>
    </Member>
    <Member MemberName="ClientSecret">
      <MemberSignature Language="C#" Value="public string? ClientSecret { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientSecret" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.ClientSecret" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSecret As String" />
      <MemberSignature Language="F#" Value="member this.ClientSecret : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.ClientSecret" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.ClientSecret" />, describes the client secret to use as a client credential in a confidential client application.
            The client secret is a string known only to the application and the identity provider. It needs to match the value configured during the application registration.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a client secret used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="secret_json":::
            
            The code below describes programmatically in C#, the same client secret.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="secret_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public string? Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As String" />
      <MemberSignature Language="F#" Value="member this.Container : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Container in which to find the credential. You will normally not use this property directly. It could be used
            by property editors in tools or IDEs. Instead, use the properties that are specific to the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <list type="bullet">
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />, then
            the container is the Key Vault base URL.</item>
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Base64Encoded" />, then
            this value is not used.</item>
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Path" />, then
            this value is the path on disk where to find the credential.</item>
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" />,
            or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" />, then
            this value is the path to the credential in the cert store, for instance <c>CurrentUser/My</c>.</item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CredentialType">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Abstractions.CredentialType CredentialType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Identity.Abstractions.CredentialType CredentialType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.CredentialType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CredentialType As CredentialType" />
      <MemberSignature Language="F#" Value="member this.CredentialType : Microsoft.Identity.Abstractions.CredentialType" Usage="Microsoft.Identity.Abstractions.CredentialDescription.CredentialType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Describes the type of credentials, based on the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            Returns:
            <list type="bullet"><item><term><see cref="F:Microsoft.Identity.Abstractions.CredentialType.Certificate" /></term><description>when <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Certificate" />, you will use this property to provide the certificate yourself. 
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Base64Encoded" /> or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />
            or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Path" /> or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" /> or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" /></description></item><item><term><see cref="F:Microsoft.Identity.Abstractions.CredentialType.Secret" /></term><description>when <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.ClientSecret" />.</description></item><item><term><see cref="F:Microsoft.Identity.Abstractions.CredentialType.SignedAssertion" /></term><description>when <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFilePath" /> or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFromManagedIdentity" />
            or <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFromVault" />.</description></item><item><term><see cref="F:Microsoft.Identity.Abstractions.CredentialType.DecryptKeys" /></term><description>when <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.AutoDecryptKeys" />.</description></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptKeysAuthenticationOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions? DecryptKeysAuthenticationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions DecryptKeysAuthenticationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.DecryptKeysAuthenticationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DecryptKeysAuthenticationOptions As AuthorizationHeaderProviderOptions" />
      <MemberSignature Language="F#" Value="member this.DecryptKeysAuthenticationOptions : Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.DecryptKeysAuthenticationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.AutoDecryptKeys" />, this property describes the authority to use
            to get a token for a web API to get the keys used to decrypt an encrypted token. The cloud instance will be the same as the application, but the application can be a multi-tenant
            application (tenant = <b>common</b> or <b>organizations</b>), and in this case to get a token on behalf of itself, the
            credential type needs to provide a tenant. More generally you might want to specify authentication options, including protocol, PopKey, etc ...
            This credential description is only used for decrypt credentials, not for client credentials.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a decrypt credential to get the decrypt keys automatically:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="autodecryp_json":::
            
            The code below describes the same, programmatically in C#.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="autodecryp_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Microsoft.Identity.Abstractions.CredentialDescription.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a unique identifier for a CredentialDescription based on <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> and <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.ReferenceOrValue" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyVaultCertificateName">
      <MemberSignature Language="C#" Value="public string? KeyVaultCertificateName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyVaultCertificateName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultCertificateName" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyVaultCertificateName As String" />
      <MemberSignature Language="F#" Value="member this.KeyVaultCertificateName : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultCertificateName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />, use this property to specify the
            the name of the certificate in Key Vault in conjunction with <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultUrl" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a certificate stored in Key Vault used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="keyvault_json":::
            
            The code below describes programmatically in C#, the same certificate stored in Key Vault.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="keyvault_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="KeyVaultUrl">
      <MemberSignature Language="C#" Value="public string? KeyVaultUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyVaultUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyVaultUrl As String" />
      <MemberSignature Language="F#" Value="member this.KeyVaultUrl : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />, use this property to specify the
            URL of the Key Vault containing the certificate, in conjunction with <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultCertificateName" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a certificate stored in Key Vault used as a client credential in a confidential client application:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="keyvault_json":::
            
            The code below describes programmatically in C#, the same certificate stored in Key Vault.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="keyvault_csharp":::
            ]]></format>
        </example>
        <altmember cref="P:Microsoft.Identity.Abstractions.CredentialDescription.KeyVaultCertificateName" />
      </Docs>
    </Member>
    <Member MemberName="ManagedIdentityClientId">
      <MemberSignature Language="C#" Value="public string? ManagedIdentityClientId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ManagedIdentityClientId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.ManagedIdentityClientId" />
      <MemberSignature Language="VB.NET" Value="Public Property ManagedIdentityClientId As String" />
      <MemberSignature Language="F#" Value="member this.ManagedIdentityClientId : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.ManagedIdentityClientId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFromManagedIdentity" />, it specifies the client ID of the Azure user-assigned managed identity 
            used to provide a signed assertion to act as a client credential for the application. This requires that the application is deployed on Azure, that the managed identity is configured, 
            and that workload identity federation with the managed identity is declared in the application registration. For details, see https://learn.microsoft.com/azure/active-directory/workload-identities/workload-identity-federation.
            </summary>
        <value>To be added.</value>
        <remarks>If you want to use the system-assigned managed identity, just use <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> = <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFromManagedIdentity" /> and
            don't provide a managed identity client ID.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a workload identity federation with a user assigned managed identity:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="msi_json":::
            
            The code below describes programmatically in C#, the same workload identity federation with a user assigned managed identity.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="msi_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReferenceOrValue">
      <MemberSignature Language="C#" Value="public string? ReferenceOrValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReferenceOrValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.ReferenceOrValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceOrValue As String" />
      <MemberSignature Language="F#" Value="member this.ReferenceOrValue : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.ReferenceOrValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Reference to the certificate or value. You will normally not use this property directly. It could be used
            by property editors in tools or IDEs. Instead, use the properties that are specific to the <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <list type="bullet">
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />, then
            the reference is the name of the certificate in Key Vault (maybe the version?).</item>
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Base64Encoded" />, then
            this value is the base 64 encoded certificate itself.</item>
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Path" />, then
            this value is the password to access the certificate (if needed).</item>
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" />,
            this value is the distinguished name.</item>
            <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" />,
            this value is the thumbprint.</item>
          </list>
        </remarks>
        <list type="bullet">
          <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.KeyVault" />, then
            the reference is the name of the certificate in Key Vault (maybe the version?).</item>
          <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Base64Encoded" />, then
            this value is the base 64 encoded certificate itself.</item>
          <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.Path" />, then
            this value is the password to access the certificate (if needed).</item>
          <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithDistinguishedName" />,
            this value is the distinguished name.</item>
          <item>If <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> equals <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.StoreWithThumbprint" />,
            this value is the thumbprint.</item>
        </list>
      </Docs>
    </Member>
    <Member MemberName="SignedAssertionFileDiskPath">
      <MemberSignature Language="C#" Value="public string? SignedAssertionFileDiskPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignedAssertionFileDiskPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.SignedAssertionFileDiskPath" />
      <MemberSignature Language="VB.NET" Value="Public Property SignedAssertionFileDiskPath As String" />
      <MemberSignature Language="F#" Value="member this.SignedAssertionFileDiskPath : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.SignedAssertionFileDiskPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> is <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFilePath" />, optionally specifies the path on disk of a file 
            containing a signed assertion used as a client assertion for the confidential client application. 
            The signed assertion file is a file containing a signed JWT assertion that is used as a client credential. You will usually use this option when you want to integrate
            with workload identity federation with Azure Kubernetes Service (AKS). 
            For details, see https://learn.microsoft.com/azure/active-directory/workload-identities/workload-identity-federation.
            </summary>
        <value>To be added.</value>
        <remarks>When deployed to AKS, if you specify <see cref="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" /> = <see cref="F:Microsoft.Identity.Abstractions.CredentialSource.SignedAssertionFilePath" /> but don't provide
            the signed assertion file disk path, the file will be searched based on the content of two environment variables: 
            <b>AZURE_FEDERATED_TOKEN_FILE</b> and <b>AZURE_ACCESS_TOKEN_FILE</b>.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a signed assertion acquired with workload identity federation with Azure Kubernetes Services (AKS):
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="aks_json":::
            
            The code below describes programmatically in C#, the same workload identity federation with with Azure Kubernetes Services (AKS) signed assertion.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="aks_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public bool Skip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Skip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Property Skip As Boolean" />
      <MemberSignature Language="F#" Value="member this.Skip : bool with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.Skip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Skip this credential description. This is useful when, you specify a list of
            credentials, some of which don't apply in a particular deployment.
            It will also be used by the <see cref="T:Microsoft.Identity.Abstractions.ICredentialsLoader" /> if it cannot find or load the credential.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceType">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Abstractions.CredentialSource SourceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Identity.Abstractions.CredentialSource SourceType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceType As CredentialSource" />
      <MemberSignature Language="F#" Value="member this.SourceType : Microsoft.Identity.Abstractions.CredentialSource with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.SourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Abstractions.CredentialSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Type of the source of the credential. This property is used to determine which other properties need
            to be provided to describe the credential.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenExchangeUrl">
      <MemberSignature Language="C#" Value="public string? TokenExchangeUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TokenExchangeUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.CredentialDescription.TokenExchangeUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenExchangeUrl As String" />
      <MemberSignature Language="F#" Value="member this.TokenExchangeUrl : string with get, set" Usage="Microsoft.Identity.Abstractions.CredentialDescription.TokenExchangeUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>7.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            (Microsoft Entra specific)
            Value that can be used to configure the token exchange resource url in the case
            of federation identity credentials with Managed identity.
            </summary>
        <value>To be added.</value>
        <remarks>If you want to use the default token exchange resource "api://AzureADTokenExchange", don't provide a token exchange url.</remarks>
        <example>
          <format type="text/markdown"><![CDATA[
            The JSON fragment below describes a workload identity federation with a user assigned managed identity:
            :::code language="json" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="tokenExchangeUrl_json":::
            
            The code below describes programmatically in C#, the same workload identity federation with a user assigned managed identity.
            :::code language="csharp" source="~/../abstractions-samples/test/Microsoft.Identity.Abstractions.Tests/CredentialDescriptionTest.cs" id="tokenExchangeUrl_csharp":::
            ]]></format>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
